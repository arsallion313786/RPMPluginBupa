#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 6.0.2 effective-5.10 (swiftlang-6.0.2.1.2 clang-1600.0.26.4)
#ifndef GOQIISDK_SWIFT_H
#define GOQIISDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreBluetooth;
@import CoreData;
@import CoreFoundation;
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import WebKit;
#endif

#import <GOQiiSDK/GOQiiSDK.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="GOQiiSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSData;
@class NSString;

SWIFT_CLASS("_TtC8GOQiiSDK15AJCryptoWrapper")
@interface AJCryptoWrapper : NSObject
+ (void)setupAJCrypto;
+ (NSData * _Nonnull)encryptData:(NSData * _Nonnull)clearTextData SWIFT_WARN_UNUSED_RESULT;
+ (NSData * _Nonnull)decrypWithEncData:(NSData * _Nonnull)encData SWIFT_WARN_UNUSED_RESULT;
+ (void)rsaEncrypt:(NSString * _Nonnull)publicKey;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSEntityDescription;
@class NSManagedObjectContext;

SWIFT_CLASS_NAMED("AppNotificationsData")
@interface AppNotificationsData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface AppNotificationsData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable action;
@property (nonatomic, copy) NSString * _Nullable activityCreater;
@property (nonatomic, copy) NSString * _Nullable activityId;
@property (nonatomic, copy) NSString * _Nullable category;
@property (nonatomic, copy) NSString * _Nullable clicked;
@property (nonatomic, copy) NSString * _Nullable commentBy;
@property (nonatomic, copy) NSString * _Nullable commentByImage;
@property (nonatomic, copy) NSString * _Nullable commentByName;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable l_notificationLogId;
@property (nonatomic, copy) NSString * _Nullable notificationLogId;
@property (nonatomic, copy) NSString * _Nullable redirectAction;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable subCategory;
@property (nonatomic, copy) NSString * _Nullable text;
@property (nonatomic, copy) NSString * _Nullable userId;
@property (nonatomic, copy) NSString * _Nullable userImage;
@property (nonatomic, copy) NSString * _Nullable userName;
@end


SWIFT_CLASS("_TtC8GOQiiSDK13BloodPressure")
@interface BloodPressure : NSObject
@property (nonatomic) NSInteger l_activityId;
@property (nonatomic) NSInteger bpId;
@property (nonatomic) NSInteger userId;
@property (nonatomic) NSInteger activityId;
@property (nonatomic) NSInteger systolic;
@property (nonatomic) NSInteger diastolic;
@property (nonatomic) NSInteger heartRate;
@property (nonatomic, copy) NSString * _Nullable heartRateData;
@property (nonatomic, copy) NSString * _Nullable logType;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable isDeleted;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable logDateTime;
@property (nonatomic) NSInteger ID1;
@property (nonatomic) NSInteger ID2;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("BloodPressureData")
@interface BloodPressureData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@class NSPredicate;
@class NSSortDescriptor;

@interface BloodPressureData (SWIFT_EXTENSION(GOQiiSDK))
/// Creates new BloodPressureData or Updates the existing BloodPressureData object.
/// \param dictionary Dictionary containing the BloodPressureData values
///
/// \param context Core data context
///
+ (BloodPressureData * _Nonnull)initOrUpdateWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary inContext:(NSManagedObjectContext * _Nonnull)context SWIFT_METHOD_FAMILY(none);
/// Get all the BloodPressureData stored in the context specified.
/// \param context Core data context
///
///
/// returns:
/// Optional array of BloodPressureData
+ (NSArray<BloodPressureData *> * _Nullable)getAllFromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Get BloodPressureData matching with specified predicate and sort order.
/// \param predicate Predicate to match the BloodPressureData with.
///
/// \param sortDescriptors Sorting order of BloodPressureData
///
/// \param context Core data context
///
///
/// returns:
/// Optional array of BloodPressureData
+ (NSArray<BloodPressureData *> * _Nullable)getDataWithPredicate:(NSPredicate * _Nullable)predicate sortDescriptors:(NSArray<NSSortDescriptor *> * _Nullable)sortDescriptors fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Generates BloodPressureData object from current object.
///
/// returns:
/// BloodPressureData
- (BloodPressure * _Nonnull)toBloodPressure SWIFT_WARN_UNUSED_RESULT;
+ (void)deleteAllBloodPressureData;
@end


@interface BloodPressureData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityId;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable diastolic;
@property (nonatomic, copy) NSString * _Nullable heartRate;
@property (nonatomic, copy) NSString * _Nullable heartRateData;
@property (nonatomic, copy) NSString * _Nullable id1;
@property (nonatomic, copy) NSString * _Nullable id2;
@property (nonatomic, copy) NSString * _Nullable isdeleted;
@property (nonatomic, copy) NSString * _Nullable l_activityId;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable logType;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable systolic;
@end


SWIFT_CLASS_NAMED("BodyTemperatureData")
@interface BodyTemperatureData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface BodyTemperatureData (SWIFT_EXTENSION(GOQiiSDK))
+ (BodyTemperatureData * _Nonnull)initOrUpdateWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary inContext:(NSManagedObjectContext * _Nonnull)context SWIFT_METHOD_FAMILY(none);
/// Calculates average temperature for sleep given date.
/// \param createdTime createdTime
///
/// \param startDate start date of week
///
/// \param endDate end date of week
///
/// \param context Coredata context
///
///
/// returns:
/// Average heart rate
+ (NSString * _Nullable)getAverageTemperatureForSleepLogDatesWithStartDate:(NSString * _Nonnull)startDate endDate:(NSString * _Nonnull)endDate player:(NSString * _Nonnull)player fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (void)updateStatusOldAll;
+ (void)deleteAllBodyTemperatureData;
@end


@interface BodyTemperatureData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityId;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable isdeleted;
@property (nonatomic, copy) NSString * _Nullable isSelf;
@property (nonatomic, copy) NSString * _Nullable l_activityId;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable logType;
@property (nonatomic, copy) NSString * _Nullable otherName;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable temperature;
@end


SWIFT_CLASS("_TtC8GOQiiSDK24BodyTemperatureViewModel")
@interface BodyTemperatureViewModel : NSObject
- (void)sendDataToServer;
+ (void)getJSONStringWithCompletion:(void (^ _Nonnull)(NSString * _Nonnull))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8GOQiiSDK12CacheManager")
@interface CacheManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) CacheManager * _Nonnull sharedInstance;)
+ (CacheManager * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getEncryptedString:(NSDictionary<NSString *, NSString *> * _Nonnull)dataDict SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getDecryptedString:(NSString * _Nonnull)encryptedString SWIFT_WARN_UNUSED_RESULT;
- (NSData * _Nonnull)decrypNewvalueWithEncData:(NSData * _Nonnull)encData SWIFT_WARN_UNUSED_RESULT;
- (void)removeCacheDataWithForkey:(NSString * _Nonnull)key;
- (void)removeHomeCellCacheDataForKey:(NSString * _Nonnull)key;
- (void)keyChainSetUp;
- (void)initValues SWIFT_METHOD_FAMILY(none);
- (void)setAPIsetup:(BOOL)isLoginWithStagging;
- (NSString * _Nullable)getValue:(NSString * _Nonnull)keys SWIFT_WARN_UNUSED_RESULT;
- (void)setValue:(NSString * _Nonnull)keys value:(NSString * _Nonnull)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("CauseSupportData")
@interface CauseSupportData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface CauseSupportData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityText;
@property (nonatomic, copy) NSString * _Nullable causeId;
@property (nonatomic, copy) NSString * _Nullable causeSupportId;
@property (nonatomic, copy) NSString * _Nullable comment;
@property (nonatomic, copy) NSString * _Nullable commentByMe;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable donatedKarma;
@property (nonatomic, copy) NSString * _Nullable donationText;
@property (nonatomic, copy) NSString * _Nullable feedId;
@property (nonatomic, copy) NSString * _Nullable heightAspectRatio;
@property (nonatomic, copy) NSString * _Nullable imageUrl;
@property (nonatomic, copy) NSString * _Nullable imageWidth;
@property (nonatomic, copy) NSString * _Nullable karmaId;
@property (nonatomic, copy) NSString * _Nullable likeByMe;
@property (nonatomic, copy) NSString * _Nullable likes;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable privacyType;
@end


SWIFT_CLASS_NAMED("ChatBotMessageData")
@interface ChatBotMessageData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@class NSDate;

@interface ChatBotMessageData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable answerFai;
@property (nonatomic, copy) NSString * _Nullable clanId;
@property (nonatomic) int64_t expireTimestamp;
@property (nonatomic, copy) NSString * _Nullable image;
@property (nonatomic, copy) NSString * _Nullable isBookmark;
@property (nonatomic) BOOL isDelivered;
@property (nonatomic) BOOL isFromPush;
@property (nonatomic) BOOL isInput;
@property (nonatomic, copy) NSString * _Nullable isLike;
@property (nonatomic, copy) NSString * _Nullable itemType;
@property (nonatomic, copy) NSString * _Nullable jsonData;
@property (nonatomic, copy) NSDate * _Nullable localTimestamp;
@property (nonatomic, copy) NSString * _Nullable message;
@property (nonatomic) int64_t messageId;
@property (nonatomic, copy) NSString * _Nullable messageTimestamp;
@property (nonatomic, copy) NSString * _Nullable senderType;
@property (nonatomic, copy) NSString * _Nullable status;
@end


SWIFT_CLASS_NAMED("ChatMessageData")
@interface ChatMessageData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@class ChatUserData;

@interface ChatMessageData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSDate * _Nullable id;
@property (nonatomic, copy) NSString * _Nullable image;
@property (nonatomic) BOOL isDelivered;
@property (nonatomic) BOOL isLiked;
@property (nonatomic, copy) NSString * _Nullable message;
@property (nonatomic, copy) NSString * _Nullable messageStatus;
@property (nonatomic, copy) NSString * _Nullable mqttId;
@property (nonatomic, copy) NSString * _Nullable reaction;
@property (nonatomic, copy) NSString * _Nullable referenceMessage;
@property (nonatomic, copy) NSString * _Nullable senderId;
@property (nonatomic, copy) NSString * _Nullable senderName;
@property (nonatomic, copy) NSString * _Nullable type;
@property (nonatomic, strong, getter=friend, setter=setFriend:) ChatUserData * _Nullable friend_;
@end


SWIFT_CLASS_NAMED("ChatUserData")
@interface ChatUserData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@class NSSet;

@interface ChatUserData (SWIFT_EXTENSION(GOQiiSDK))
- (void)addMessagesObject:(ChatMessageData * _Nonnull)value;
- (void)removeMessagesObject:(ChatMessageData * _Nonnull)value;
- (void)addMessages:(NSSet * _Nonnull)values;
- (void)removeMessages:(NSSet * _Nonnull)values;
@end


@interface ChatUserData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable authId;
@property (nonatomic, copy) NSString * _Nullable authPass;
@property (nonatomic, copy) NSString * _Nullable clanId;
@property (nonatomic, copy) NSString * _Nullable clanName;
@property (nonatomic, copy) NSString * _Nullable id;
@property (nonatomic, copy) NSString * _Nullable imageUrl;
@property (nonatomic, copy) NSString * _Nullable lastMessageSenderId;
@property (nonatomic, copy) NSString * _Nullable lastMessageText;
@property (nonatomic, copy) NSString * _Nullable lastMessageType;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic) int64_t newChatCount;
@property (nonatomic, copy) NSDate * _Nullable time;
@property (nonatomic, copy) NSString * _Nullable type;
@property (nonatomic, strong) ChatMessageData * _Nullable lastMessage;
@property (nonatomic, strong) NSSet * _Nullable messages;
@end


SWIFT_CLASS_NAMED("CoachChatBookmarkData")
@interface CoachChatBookmarkData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface CoachChatBookmarkData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable bookmarkImage;
@property (nonatomic, copy) NSString * _Nullable bookmarkLocalId;
@property (nonatomic, copy) NSString * _Nullable bookmarkName;
@property (nonatomic, copy) NSString * _Nullable bookmarkServerId;
@property (nonatomic, copy) NSString * _Nullable bookmarkText;
@property (nonatomic, copy) NSString * _Nullable bookmarkType;
@property (nonatomic, copy) NSString * _Nullable coachName;
@property (nonatomic, copy) NSString * _Nullable conversationId;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable isBookmarkDeleted;
@property (nonatomic, copy) NSString * _Nullable isExpert;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable updatedTime;
@property (nonatomic, copy) NSString * _Nullable userId;
@end


SWIFT_CLASS_NAMED("CoachChatHistoryData")
@interface CoachChatHistoryData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface CoachChatHistoryData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable cardAction;
@property (nonatomic, copy) NSString * _Nullable cardDescription;
@property (nonatomic, copy) NSString * _Nullable cardText;
@property (nonatomic, copy) NSString * _Nullable coachId;
@property (nonatomic, copy) NSString * _Nullable coachImage;
@property (nonatomic, copy) NSString * _Nullable coachName;
@property (nonatomic, copy) NSString * _Nullable conversationId;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable delay;
@property (nonatomic, copy) NSString * _Nullable expertId;
@property (nonatomic, copy) NSString * _Nullable expertImage;
@property (nonatomic, copy) NSString * _Nullable expertName;
@property (nonatomic, copy) NSString * _Nullable flagged;
@property (nonatomic, copy) NSString * _Nullable image;
@property (nonatomic, copy) NSString * _Nullable isBookMarked;
@property (nonatomic, copy) NSString * _Nullable isLiked;
@property (nonatomic, copy) NSString * _Nullable localId;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable message;
@property (nonatomic, copy) NSString * _Nullable messageType;
@property (nonatomic, copy) NSString * _Nullable repliedTime;
@property (nonatomic, copy) NSString * _Nullable screenNumber;
@property (nonatomic, copy) NSString * _Nullable sender;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable subScreenNumber;
@property (nonatomic, copy) NSString * _Nullable text;
@property (nonatomic, copy) NSString * _Nullable time;
@property (nonatomic, copy) NSString * _Nullable timeV2;
@property (nonatomic, copy) NSString * _Nullable type;
@property (nonatomic, copy) NSString * _Nullable userId;
@end


SWIFT_CLASS_NAMED("CoachChatLikeData")
@interface CoachChatLikeData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface CoachChatLikeData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable chatLikeServerId;
@property (nonatomic, copy) NSString * _Nullable conversationId;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable isChatLiked;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable userId;
@end


SWIFT_CLASS_NAMED("CoachUserDetailData")
@interface CoachUserDetailData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface CoachUserDetailData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable id;
@property (nonatomic, copy) NSString * _Nullable image;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable type;
@end

@class NSPersistentContainer;

/// Core Data Manager
/// Responsible for managing Coredata contexts and persistentContainer.
SWIFT_CLASS("_TtC8GOQiiSDK15CoreDataManager") SWIFT_AVAILABILITY(ios,introduced=10.0)
@interface CoreDataManager : NSObject
/// Shared instance of the class
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) CoreDataManager * _Nonnull shared;)
+ (CoreDataManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
/// Main/View Context, which runs on background thread.
@property (nonatomic, readonly, strong) NSManagedObjectContext * _Nonnull background;
@property (nonatomic, strong) NSManagedObjectContext * _Nonnull parentContext;
@property (nonatomic, strong) NSManagedObjectContext * _Nonnull main;
- (int64_t)getAutoIncremenet SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// /        let url = FileManager.default.urls(for: .applicationSupportDirectory, in: .userDomainMask).last?.appendingPathComponent(“GOQiiNativeEncryotedCoreData.sqlite”).absoluteString ?? “”
/// /        // Apply encription to Coredata
/// /        var cOpts : [String:Any] = [:]
/// /        if let passphraseKey = EncryptedStore.optionPassphraseKey(), let fileManager = EncryptedStore.optionFileManager(), let databaseLocation = EncryptedStore.optionDatabaseLocation() ,let defaultFileManager = EncryptedStoreFileManager.default(){
/// /            cOpts[passphraseKey] = “ADLyKNl2OuJmjPv5A5wweLEeqxWplzcD”
/// /            cOpts[fileManager] = defaultFileManager
/// /            cOpts[databaseLocation] = url
/// /        }
/// /
/// /        do {
/// /            let desc = try EncryptedStore.makeDescription(options: cOpts, configuration: nil)
/// /            container.persistentStoreDescriptions = [desc]
/// /        } catch {
/// /            //print2(“Error while encripting Coredata”)
/// /        }
@property (nonatomic, strong) NSPersistentContainer * _Nonnull persistentContainer;
/// <#Description#>
/// \param context <#context description#>
///
- (void)saveContext:(NSManagedObjectContext * _Nullable)context;
@end


SWIFT_CLASS_NAMED("CumulativeMonthWise")
@interface CumulativeMonthWise : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface CumulativeMonthWise (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityCumulativeCount;
@property (nonatomic, copy) NSString * _Nullable checkinId;
@property (nonatomic, copy) NSString * _Nullable habitCumulativeCount;
@property (nonatomic, copy) NSString * _Nullable month;
@property (nonatomic, copy) NSString * _Nullable year;
@end


SWIFT_CLASS_NAMED("DailyDeviceActivityData")
@interface DailyDeviceActivityData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@class DailyActivity;

@interface DailyDeviceActivityData (SWIFT_EXTENSION(GOQiiSDK))
/// Creates new DailyDeviceActivityData or Updates the existing DailyDeviceActivityData object.
/// \param dictionary Dictionary containing the DailyDeviceActivityData values
///
/// \param context Core data context
///
+ (DailyDeviceActivityData * _Nonnull)initOrUpdateWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary inContext:(NSManagedObjectContext * _Nonnull)context SWIFT_METHOD_FAMILY(none);
/// Map data values to the object.
/// \param dictionary Dictionary containing the values.
///
- (void)mapValuesFromDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary;
/// Get all the DailyDeviceActivityData stored in the context specified.
/// \param context Core data context
///
///
/// returns:
/// Optional array of DailyDeviceActivityData
+ (NSArray<DailyDeviceActivityData *> * _Nullable)getAllFromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Get DailyDeviceActivityData matching with specified predicate and sort order.
/// \param predicate Predicate to match the DailyDeviceActivityData with.
///
/// \param sortDescriptors Sorting order of DailyDeviceActivityData
///
/// \param context Core data context
///
///
/// returns:
/// Optional array of DailyDeviceActivityData
+ (NSArray<DailyDeviceActivityData *> * _Nullable)getDataWithPredicate:(NSPredicate * _Nullable)predicate sortDescriptors:(NSArray<NSSortDescriptor *> * _Nullable)sortDescriptors fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<DailyDeviceActivityData *> * _Nullable)getDataWithLimitWithPredicate:(NSPredicate * _Nullable)predicate sortDescriptors:(NSSortDescriptor * _Nullable)sortDescriptors limits:(NSInteger)limits fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (DailyDeviceActivityData * _Nullable)getSingleDataWithPredicate:(NSPredicate * _Nullable)predicate inContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (DailyDeviceActivityData * _Nullable)getRecentDailyDeviceDataByLogDateFromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Get sum totalSteps with matching <code>totalSteps</code>.
/// \param weightLogId totalSteps
///
/// \param context Coredata context
///
///
/// returns:
/// Array containing min and max heart rate as String, respectively, i.e. [sum totalSteps]
+ (NSDictionary<NSString *, id> * _Nullable)getSumTotalStepsWithLogdate:(NSString * _Nonnull)firstDate secondDate:(NSString * _Nonnull)secondDate expressionName:(NSString * _Nonnull)expressionName expressionName2:(NSString * _Nonnull)expressionName2 expressionName3:(NSString * _Nonnull)expressionName3 fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// <#Description#>
/// \param context <#context description#>
///
+ (void)deleteWithPredicate:(NSPredicate * _Nullable)predicate fromContext:(NSManagedObjectContext * _Nonnull)context;
+ (NSDictionary * _Nonnull)convertDailyDeviceActivityToDict:(DailyActivity * _Nonnull)data SWIFT_WARN_UNUSED_RESULT;
+ (NSDictionary * _Nonnull)convertDailyDeviceActivityToDictForAppleHealth:(DailyActivity * _Nonnull)data SWIFT_WARN_UNUSED_RESULT;
/// Generates DailyActivity object from current object.
///
/// returns:
/// DailyActivity
- (DailyActivity * _Nonnull)toDailyActivity SWIFT_WARN_UNUSED_RESULT;
+ (void)deleteAllDailyDeviceActivityData;
@end


@interface DailyDeviceActivityData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable commentByMe;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable cumulativeSteps;
@property (nonatomic, copy) NSString * _Nullable dailyActivityId;
@property (nonatomic, copy) NSString * _Nullable healthKitSteps;
@property (nonatomic, copy) NSString * _Nullable karmaPoint;
@property (nonatomic, copy) NSString * _Nullable l_dailyDeviceActivityId;
@property (nonatomic, copy) NSString * _Nullable likeByMe;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable otherSteps;
@property (nonatomic, copy) NSString * _Nullable privacyType;
@property (nonatomic, copy) NSString * _Nullable source;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable sum96stepsv2;
@property (nonatomic, copy) NSString * _Nullable sum96stepsv3;
@property (nonatomic, copy) NSString * _Nullable totalActiveTime;
@property (nonatomic, copy) NSString * _Nullable totalCalories;
@property (nonatomic, copy) NSString * _Nullable totalDistance;
@property (nonatomic, copy) NSString * _Nullable totalSteps;
@property (nonatomic, copy) NSString * _Nullable type;
@property (nonatomic, copy) NSString * _Nullable userId;
@end


SWIFT_CLASS_NAMED("DailySkipActivityData")
@interface DailySkipActivityData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface DailySkipActivityData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityTime;
@property (nonatomic, copy) NSString * _Nullable dailySkipActivityId;
@property (nonatomic, copy) NSString * _Nullable l_dailySkipActivityId;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable logDateTime;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable totalCalories;
@property (nonatomic, copy) NSString * _Nullable totalSkip;
@property (nonatomic, copy) NSString * _Nullable totalSpeed;
@end

@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC8GOQiiSDK6DemoVC")
@interface DemoVC : UIViewController
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("DetailActivityData")
@interface DetailActivityData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface DetailActivityData (SWIFT_EXTENSION(GOQiiSDK))
/// Creates new DetailActivityData or Updates the existing DetailActivityData object.
/// \param dictionary Dictionary containing the DetailActivityData values
///
/// \param context Core data context
///
+ (DetailActivityData * _Nonnull)initOrUpdateWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary inContext:(NSManagedObjectContext * _Nonnull)context SWIFT_METHOD_FAMILY(none);
/// Calculates sum of steps for given ‘logDate’.
/// \param logDate logDate
///
/// \param context Coredata context
///
///
/// returns:
/// Sum of steps
+ (NSString * _Nullable)getSumOfStepsForLogDate:(NSString * _Nonnull)logDate fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Fetches all data where logEndDate is between start and end date specified.
/// \param startDate startDate
///
/// \param endDate endDate
///
/// \param context Coredata context
///
///
/// returns:
/// Array of DetailActivityData
+ (NSArray<DetailActivityData *> * _Nullable)getAllWithStartDate:(NSString * _Nonnull)startDate endDate:(NSString * _Nonnull)endDate fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
@end


@interface DetailActivityData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityId;
@property (nonatomic, copy) NSString * _Nullable activityType;
@property (nonatomic, copy) NSString * _Nullable calories;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable descriptionString;
@property (nonatomic, copy) NSString * _Nullable distance;
@property (nonatomic, copy) NSString * _Nullable id1;
@property (nonatomic, copy) NSString * _Nullable id2;
@property (nonatomic, copy) NSString * _Nullable l_activityId;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable logDateTime;
@property (nonatomic, copy) NSString * _Nullable logEndTime;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable steps;
@end


SWIFT_CLASS_NAMED("DeviceActivityData")
@interface DeviceActivityData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@class NSNumber;

@interface DeviceActivityData (SWIFT_EXTENSION(GOQiiSDK))
/// Creates new DeviceActivityData or Updates the existing DeviceActivityData object.
/// \param dictionary Dictionary containing the DeviceActivityData values
///
/// \param context Core data context
///
+ (DeviceActivityData * _Nonnull)initOrUpdateWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary inContext:(NSManagedObjectContext * _Nonnull)context SWIFT_METHOD_FAMILY(none);
/// Map data values to the object.
/// \param dictionary Dictionary containing the values.
///
- (void)mapValuesFromDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary;
/// Get all the DeviceActivityData stored in the context specified.
/// \param context Core data context
///
///
/// returns:
/// Optional array of DeviceActivityData
+ (NSArray<DeviceActivityData *> * _Nullable)getAllFromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Get DeviceActivityData matching with specified predicate and sort order.
/// \param predicate Predicate to match the DeviceActivityData with.
///
/// \param sortDescriptors Sorting order of DeviceActivityData
///
/// \param context Core data context
///
///
/// returns:
/// Optional array of DeviceActivityData
+ (NSArray<DeviceActivityData *> * _Nullable)getDataWithPredicate:(NSPredicate * _Nullable)predicate sortDescriptors:(NSArray<NSSortDescriptor *> * _Nullable)sortDescriptors fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (NSNumber * _Nullable)getDataCountWithPredicate:(NSPredicate * _Nullable)predicate fromCotext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<DeviceActivityData *> * _Nullable)getDataWithLimitWithPredicate:(NSPredicate * _Nullable)predicate sortDescriptors:(NSSortDescriptor * _Nullable)sortDescriptors limits:(NSInteger)limits fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (DeviceActivityData * _Nullable)getSingleDataWithPredicate:(NSPredicate * _Nullable)predicate inContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (DeviceActivityData * _Nullable)getRecentDailyDeviceDataByLogDateFromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Get Avg Device Data  with matching <code>expression</code>.
/// \param expressionName String
///
/// \param context Coredata context
///
///
/// returns:
/// String
+ (NSDictionary<NSString *, id> * _Nullable)getAvgSleepDeviceDataWithPredicate:(NSPredicate * _Nullable)predicate expressionName:(NSString * _Nonnull)expressionName fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Get sum totalSteps with matching <code>totalSteps</code>.
/// \param weightLogId totalSteps
///
/// \param context Coredata context
///
///
/// returns:
/// Array containing min and max heart rate as String, respectively, i.e. [sum totalSteps]
+ (NSDictionary<NSString *, id> * _Nullable)getSumTotalDeviceDataWithPredicate:(NSPredicate * _Nullable)predicate expressionName:(NSString * _Nonnull)expressionName expressionName2:(NSString * _Nonnull)expressionName2 expressionName3:(NSString * _Nonnull)expressionName3 expressionName4:(NSString * _Nonnull)expressionName4 fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (NSDictionary<NSString *, id> * _Nullable)getDistinctDataWithPredicate:(NSPredicate * _Nullable)predicate expressionName:(NSString * _Nonnull)expressionName fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (NSDictionary<NSString *, id> * _Nullable)getMaxDataWithPredicate:(NSPredicate * _Nullable)predicate expressionName:(NSString * _Nonnull)expressionName fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (NSDictionary<NSString *, id> * _Nullable)getMinDataWithPredicate:(NSPredicate * _Nullable)predicate expressionName:(NSString * _Nonnull)expressionName fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (NSDictionary<NSString *, id> * _Nullable)getMaxMinDataWithPredicate:(NSPredicate * _Nullable)predicate expressionName:(NSString * _Nonnull)expressionName expressionName2:(NSString * _Nonnull)expressionName2 fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// <#Description#>
/// \param context <#context description#>
///
+ (void)deleteWithPredicate:(NSPredicate * _Nullable)predicate fromContext:(NSManagedObjectContext * _Nonnull)context;
+ (void)deleteAllRecords;
+ (NSDictionary<NSString *, id> * _Nullable)getdistinctDeviceData:(NSString * _Nonnull)fromDate fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (void)updateStatusAllWithStatus:(NSString * _Nonnull)status logDate:(NSString * _Nonnull)logDate fromContext:(NSManagedObjectContext * _Nonnull)context;
@end


@interface DeviceActivityData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityId;
@property (nonatomic, copy) NSString * _Nullable activityType;
@property (nonatomic, copy) NSString * _Nullable almostAwake;
@property (nonatomic, copy) NSString * _Nullable calories;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable deepSleep;
@property (nonatomic, copy) NSString * _Nullable discription;
@property (nonatomic, copy) NSString * _Nullable distance;
@property (nonatomic, copy) NSString * _Nullable duration;
@property (nonatomic, copy) NSString * _Nullable endTime;
@property (nonatomic, copy) NSString * _Nullable l_activityId;
@property (nonatomic, copy) NSString * _Nullable lightSleep;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable month;
@property (nonatomic, copy) NSString * _Nullable offset;
@property (nonatomic, copy) NSString * _Nullable remSleep;
@property (nonatomic, copy) NSString * _Nullable s1;
@property (nonatomic, copy) NSString * _Nullable s2;
@property (nonatomic, copy) NSString * _Nullable s3;
@property (nonatomic, copy) NSString * _Nullable s4;
@property (nonatomic, copy) NSString * _Nullable s5;
@property (nonatomic, copy) NSString * _Nullable s6;
@property (nonatomic, copy) NSString * _Nullable s7;
@property (nonatomic, copy) NSString * _Nullable s8;
@property (nonatomic, copy) NSString * _Nullable startTime;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable steps;
@property (nonatomic, copy) NSString * _Nullable userId;
@property (nonatomic, copy) NSString * _Nullable year;
@end


SWIFT_CLASS_NAMED("ECGData")
@interface ECGData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface ECGData (SWIFT_EXTENSION(GOQiiSDK))
/// Creates new ECGData or Updates the existing ECGData object.
/// \param dictionary Dictionary containing the ECGData values
///
/// \param context Core data context
///
+ (ECGData * _Nonnull)initOrUpdateWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary inContext:(NSManagedObjectContext * _Nonnull)context SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
/// Check  ECGData already present.
/// \param dictionary Dictionary containing the ECGData values
///
/// \param context Core data context
///
+ (BOOL)isECGDataExistsWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary inContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Map data values to the object.
/// \param dictionary Dictionary containing the values.
///
- (void)mapValuesFromDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary;
/// Get all the ECGData stored in the context specified.
/// \param context Core data context
///
///
/// returns:
/// Optional array of ECGData
+ (NSArray<ECGData *> * _Nullable)getAllFromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Get ECGData matching with specified predicate and sort order.
/// \param predicate Predicate to match the ECGData with.
///
/// \param sortDescriptors Sorting order of ECGData
///
/// \param context Core data context
///
///
/// returns:
/// Optional array of ECGData
+ (NSArray<ECGData *> * _Nullable)getDataWithPredicate:(NSPredicate * _Nullable)predicate sortDescriptors:(NSArray<NSSortDescriptor *> * _Nullable)sortDescriptors fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (void)deleteAllECGData;
@end


@interface ECGData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable data;
@property (nonatomic, copy) NSString * _Nullable ecgId;
@property (nonatomic, copy) NSString * _Nullable fullImage;
@property (nonatomic, copy) NSString * _Nullable hrv;
@property (nonatomic, copy) NSString * _Nullable l_ecgId;
@property (nonatomic, copy) NSString * _Nullable logDateTime;
@property (nonatomic, copy) NSString * _Nullable mean;
@property (nonatomic, copy) NSString * _Nullable pdfLink;
@property (nonatomic, copy) NSString * _Nullable pr;
@property (nonatomic, copy) NSString * _Nullable qrs;
@property (nonatomic, copy) NSString * _Nullable qt;
@property (nonatomic, copy) NSString * _Nullable qtc;
@property (nonatomic, copy) NSString * _Nullable recordingTime;
@property (nonatomic, copy) NSString * _Nullable report_result;
@property (nonatomic, copy) NSString * _Nullable report_summary;
@property (nonatomic, copy) NSString * _Nullable rmssd;
@property (nonatomic, copy) NSString * _Nullable sdnn;
@property (nonatomic, copy) NSString * _Nullable sdsd;
@property (nonatomic, copy) NSString * _Nullable slotNo;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable thumbnailImage;
@end


SWIFT_CLASS("_TtC8GOQiiSDK18EndPointAPIManager")
@interface EndPointAPIManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) EndPointAPIManager * _Nonnull shared;)
+ (EndPointAPIManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)mapEndpointsWithData:(NSDictionary * _Nonnull)data;
- (void)saveEndPointData:(NSDictionary * _Nonnull)data;
- (void)loadCacheEndPoint;
@end


SWIFT_CLASS_NAMED("FastTrackData")
@interface FastTrackData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface FastTrackData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable durationText;
@property (nonatomic, copy) NSDate * _Nullable endDate;
@property (nonatomic, copy) NSString * _Nullable fastTrackId;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSDate * _Nullable startDate;
@property (nonatomic, copy) NSString * _Nullable status;
@end


SWIFT_CLASS_NAMED("FeedActivityData")
@interface FeedActivityData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface FeedActivityData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityId;
@property (nonatomic, copy) NSString * _Nullable activityText;
@property (nonatomic, copy) NSString * _Nullable commentByMe;
@property (nonatomic, copy) NSString * _Nullable commentsCount;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable donationText;
@property (nonatomic, copy) NSString * _Nullable feedId;
@property (nonatomic, copy) NSString * _Nullable feedType;
@property (nonatomic, copy) NSString * _Nullable heightAspectRatio;
@property (nonatomic, copy) NSString * _Nullable imageUrl;
@property (nonatomic, copy) NSString * _Nullable imageWidth;
@property (nonatomic, copy) NSString * _Nullable l_activityId;
@property (nonatomic, copy) NSString * _Nullable likeByMe;
@property (nonatomic, copy) NSString * _Nullable likesCount;
@property (nonatomic, copy) NSString * _Nullable localActivityImage;
@property (nonatomic, copy) NSString * _Nullable localFoodImage;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable privacyType;
@property (nonatomic, copy) NSString * _Nullable serverFeedId;
@property (nonatomic, copy) NSString * _Nullable source;
@property (nonatomic, copy) NSString * _Nullable status;
@end


SWIFT_CLASS_NAMED("FoodLogData")
@interface FoodLogData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface FoodLogData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityText;
@property (nonatomic, copy) NSString * _Nullable amount;
@property (nonatomic, copy) NSString * _Nullable calories;
@property (nonatomic, copy) NSString * _Nullable comment;
@property (nonatomic, copy) NSString * _Nullable commentByMe;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable feedId;
@property (nonatomic, copy) NSString * _Nullable foodImage;
@property (nonatomic, copy) NSString * _Nullable foodLogId;
@property (nonatomic, copy) NSString * _Nullable healthAnalysis;
@property (nonatomic, copy) NSString * _Nullable heightAspectRatio;
@property (nonatomic, copy) NSString * _Nullable imageWidth;
@property (nonatomic, copy) NSString * _Nullable is_deleted;
@property (nonatomic, copy) NSString * _Nullable l_foodLogId;
@property (nonatomic, copy) NSString * _Nullable lastModifiedDate;
@property (nonatomic, copy) NSString * _Nullable likeByMe;
@property (nonatomic, copy) NSString * _Nullable likes;
@property (nonatomic, copy) NSString * _Nullable localFoodImage;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable mealType;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable nutritionData;
@property (nonatomic, copy) NSString * _Nullable privacyType;
@property (nonatomic, copy) NSString * _Nullable recognitionType;
@property (nonatomic, copy) NSString * _Nullable repeatCount;
@property (nonatomic, copy) NSString * _Nullable source;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable unit;
@property (nonatomic, copy) NSString * _Nullable userId;
@end


SWIFT_CLASS_NAMED("FrequentFoodLogData")
@interface FrequentFoodLogData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface FrequentFoodLogData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityText;
@property (nonatomic, copy) NSString * _Nullable amount;
@property (nonatomic, copy) NSString * _Nullable calories;
@property (nonatomic, copy) NSString * _Nullable comment;
@property (nonatomic, copy) NSString * _Nullable commentByMe;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable foodImage;
@property (nonatomic, copy) NSString * _Nullable foodLogId;
@property (nonatomic, copy) NSString * _Nullable healthAnalysis;
@property (nonatomic, copy) NSString * _Nullable heightAspectRatio;
@property (nonatomic, copy) NSString * _Nullable imageWidth;
@property (nonatomic, copy) NSString * _Nullable is_deleted;
@property (nonatomic, copy) NSString * _Nullable l_foodLogId;
@property (nonatomic, copy) NSString * _Nullable lastModifiedDate;
@property (nonatomic, copy) NSString * _Nullable likeByMe;
@property (nonatomic, copy) NSString * _Nullable likes;
@property (nonatomic, copy) NSString * _Nullable localFoodImage;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable mealType;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable nutritionData;
@property (nonatomic, copy) NSString * _Nullable privacyType;
@property (nonatomic, copy) NSString * _Nullable recognitionType;
@property (nonatomic, copy) NSString * _Nullable repeatCount;
@property (nonatomic, copy) NSString * _Nullable source;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable unit;
@property (nonatomic, copy) NSString * _Nullable userId;
@end


SWIFT_CLASS_NAMED("GPSBandData")
@interface GPSBandData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface GPSBandData (SWIFT_EXTENSION(GOQiiSDK))
/// Creates new GPSBandData or Updates the existing GPSBandData object.
/// \param dictionary Dictionary containing the GPSBandData values
///
/// \param context Core data context
///
+ (GPSBandData * _Nonnull)initOrUpdateWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary inContext:(NSManagedObjectContext * _Nonnull)context SWIFT_METHOD_FAMILY(none);
/// Get GPSBandData matching with specified predicate and sort order.
/// \param predicate Predicate to match the GPSBandData with.
///
/// \param sortDescriptors Sorting order of GPSBandData
///
/// \param context Core data context
///
///
/// returns:
/// Optional array of GPSBandData
+ (NSArray<GPSBandData *> * _Nullable)getDataWithPredicate:(NSPredicate * _Nullable)predicate sortDescriptors:(NSArray<NSSortDescriptor *> * _Nullable)sortDescriptors fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
@end


@interface GPSBandData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable elevation;
@property (nonatomic, copy) NSString * _Nullable l_gpsDataId;
@property (nonatomic, copy) NSString * _Nullable lat;
@property (nonatomic, copy) NSString * _Nullable lng;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable logDateTime;
@end


SWIFT_CLASS("_TtC8GOQiiSDK8GPSModel")
@interface GPSModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSURL;
@class NSURLSessionConfiguration;

SWIFT_CLASS("_TtC8GOQiiSDK16GQNetworkManager")
@interface GQNetworkManager : AFHTTPSessionManager
+ (void)initNetworkManager SWIFT_METHOD_FAMILY(none);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
+ (void)requestPostDataWithMethodEndPoint:(NSString * _Nonnull)methodEndpoint withParam:(NSDictionary * _Nonnull)param completion:(void (^ _Nonnull)(NSDictionary * _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)initWithBaseURL:(NSURL * _Nullable)url sessionConfiguration:(NSURLSessionConfiguration * _Nullable)configuration SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS_NAMED("GeneratedfeedData")
@interface GeneratedfeedData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface GeneratedfeedData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityName;
@property (nonatomic, copy) NSString * _Nullable activityText;
@property (nonatomic, copy) NSString * _Nullable additionalValue;
@property (nonatomic, copy) NSString * _Nullable comment;
@property (nonatomic, copy) NSString * _Nullable commentByMe;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable date;
@property (nonatomic, copy) NSString * _Nullable fai;
@property (nonatomic, copy) NSString * _Nullable feedId;
@property (nonatomic, copy) NSString * _Nullable feedImage;
@property (nonatomic, copy) NSString * _Nullable feedImages;
@property (nonatomic, copy) NSString * _Nullable fsn;
@property (nonatomic, copy) NSString * _Nullable fssn;
@property (nonatomic, copy) NSString * _Nullable fui;
@property (nonatomic, copy) NSString * _Nullable genericData;
@property (nonatomic, copy) NSString * _Nullable heightAspectRatio;
@property (nonatomic, copy) NSString * _Nullable imageWidth;
@property (nonatomic, copy) NSString * _Nullable isdeleted;
@property (nonatomic, copy) NSString * _Nullable jsonData;
@property (nonatomic, copy) NSString * _Nullable l_generatedFeedId;
@property (nonatomic, copy) NSString * _Nullable like;
@property (nonatomic, copy) NSString * _Nullable likeByMe;
@property (nonatomic, copy) NSString * _Nullable localFeedImage;
@property (nonatomic, copy) NSString * _Nullable logId;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable navigationType;
@property (nonatomic, copy) NSString * _Nullable privacy;
@property (nonatomic, copy) NSString * _Nullable source;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable subType;
@property (nonatomic, copy) NSString * _Nullable tagDescription;
@property (nonatomic, copy) NSString * _Nullable tagId;
@property (nonatomic, copy) NSString * _Nullable videoList;
@end


SWIFT_CLASS_NAMED("GenericPageData")
@interface GenericPageData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface GenericPageData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable l_pageId;
@property (nonatomic, copy) NSString * _Nullable pageCache;
@property (nonatomic, copy) NSString * _Nullable pageData;
@property (nonatomic, copy) NSString * _Nullable pageId;
@end

@class CBPeripheral;
@class CBCharacteristic;

SWIFT_PROTOCOL("_TtP8GOQiiSDK16GlucoBLEProtocol_")
@protocol GlucoBLEProtocol
@optional
- (void)BLEactivatedWithState:(BOOL)state;
- (void)BLEfoundPeripheralWithDevice:(CBPeripheral * _Nonnull)device rssi:(NSInteger)rssi mac:(NSString * _Nonnull)mac;
- (void)BLEreadyWithRACPcharacteristic:(CBCharacteristic * _Nonnull)RACPcharacteristic;
- (void)BLESyncCompleted;
- (void)glucoMeterConnected;
- (void)glucoMeterDisconnected;
@end

@protocol GlucoBLEManagerProtocol;

SWIFT_CLASS("_TtC8GOQiiSDK15GlucoBLEManager")
@interface GlucoBLEManager : NSObject <GlucoBLEProtocol>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) GlucoBLEManager * _Nonnull shared;)
+ (GlucoBLEManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, strong) id <GlucoBLEManagerProtocol> _Nullable glucoBleManagerDelegate;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)BLEactivatedWithState:(BOOL)state;
- (void)BLEfoundPeripheralWithDevice:(CBPeripheral * _Nonnull)device rssi:(NSInteger)rssi mac:(NSString * _Nonnull)mac;
- (void)BLEreadyWithRACPcharacteristic:(CBCharacteristic * _Nonnull)RACPcharacteristic;
- (void)BLESyncCompleted;
- (void)connectWithPeripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)glucoMeterConnected;
- (void)glucoMeterDisconnected;
- (void)startScanning;
- (void)startBLE;
- (void)connectToSavedGlucometerDevice;
- (NSString * _Nonnull)getGlucoUUID SWIFT_WARN_UNUSED_RESULT;
- (void)uploadGlucometerData:(NSArray * _Null_unspecified)results;
@end


SWIFT_PROTOCOL("_TtP8GOQiiSDK23GlucoBLEManagerProtocol_")
@protocol GlucoBLEManagerProtocol
@optional
- (void)BLEactivatedWithState:(BOOL)state;
- (void)BLEfoundPeripheralWithDevice:(CBPeripheral * _Nonnull)device rssi:(NSInteger)rssi mac:(NSString * _Nonnull)mac;
- (void)BLEreadyWithRACPcharacteristic:(CBCharacteristic * _Nonnull)RACPcharacteristic;
- (void)BLESyncCompleted;
- (void)glucoMeterConnected;
- (void)glucoMeterDisconnected;
- (void)glucoMeterData:(NSArray * _Nonnull)data;
@end



SWIFT_CLASS("_TtC8GOQiiSDK13GlucoMeterBLE")
@interface GlucoMeterBLE : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)setDelegateWithDelegate:(id <GlucoBLEProtocol> _Nonnull)delegate;
- (void)startBLE;
- (void)scan;
- (void)scanWithUUID:(NSString * _Nonnull)glucometerUUID;
- (void)connectWithPeripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)doWriteWithPeripheral:(CBPeripheral * _Nonnull)peripheral characteristic:(CBCharacteristic * _Nonnull)characteristic message:(NSArray<NSNumber *> * _Nonnull)message;
- (void)syncWithSeq:(NSInteger)seq glucometer:(CBPeripheral * _Nonnull)glucometer RACP:(CBCharacteristic * _Nonnull)RACP;
@end

@class CBService;

@interface GlucoMeterBLE (SWIFT_EXTENSION(GOQiiSDK)) <CBPeripheralDelegate>
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverServices:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverCharacteristicsForService:(CBService * _Nonnull)service error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didUpdateValueForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
@end

@class CBCentralManager;

@interface GlucoMeterBLE (SWIFT_EXTENSION(GOQiiSDK)) <CBCentralManagerDelegate>
- (void)centralManagerDidUpdateState:(CBCentralManager * _Nonnull)central;
- (void)centralManager:(CBCentralManager * _Nonnull)central didDiscoverPeripheral:(CBPeripheral * _Nonnull)peripheral advertisementData:(NSDictionary<NSString *, id> * _Nonnull)advertisementData RSSI:(NSNumber * _Nonnull)RSSI;
- (void)centralManager:(CBCentralManager * _Nonnull)central didConnectPeripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)centralManager:(CBCentralManager * _Nonnull)central didDisconnectPeripheral:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
@end


SWIFT_CLASS("_TtC8GOQiiSDK22GlucoMeterMakeSureCell")
@interface GlucoMeterMakeSureCell : UITableViewCell
- (void)awakeFromNib;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8GOQiiSDK17GlucoMeterSetupVC")
@interface GlucoMeterSetupVC : UIViewController
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UITableView;
@class NSIndexPath;

@interface GlucoMeterSetupVC (SWIFT_EXTENSION(GOQiiSDK)) <UITableViewDataSource, UITableViewDelegate>
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end


@interface GlucoMeterSetupVC (SWIFT_EXTENSION(GOQiiSDK)) <GlucoBLEManagerProtocol>
- (void)BLEactivatedWithState:(BOOL)state;
- (void)BLESyncCompleted;
- (void)BLEfoundPeripheralWithDevice:(CBPeripheral * _Nonnull)device rssi:(NSInteger)rssi mac:(NSString * _Nonnull)mac;
- (void)glucoMeterConnected;
- (void)glucoMeterDisconnected;
@end


SWIFT_CLASS_NAMED("GlucometerData")
@interface GlucometerData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface GlucometerData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable level;
@property (nonatomic, copy) NSString * _Nullable localId;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable logType;
@property (nonatomic, copy) NSString * _Nullable mealType;
@property (nonatomic, copy) NSString * _Nullable metric;
@property (nonatomic, copy) NSString * _Nullable serverId;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable subType;
@property (nonatomic, copy) NSString * _Nullable type;
@property (nonatomic, copy) NSString * _Nullable vitalType;
@end


SWIFT_CLASS_NAMED("GoActvityLogData")
@interface GoActvityLogData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface GoActvityLogData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable address;
@property (nonatomic, copy) NSString * _Nullable goqiiCash;
@property (nonatomic, copy) NSString * _Nullable intensity;
@property (nonatomic) int64_t lastCheckInTime;
@property (nonatomic, copy) NSString * _Nullable lattitude;
@property (nonatomic, copy) NSString * _Nullable longitude;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable photoReference;
@property (nonatomic, copy) NSString * _Nullable placeId;
@property (nonatomic, copy) NSString * _Nullable placeType;
@property (nonatomic) double radius;
@property (nonatomic, copy) NSString * _Nullable radiusColor;
@end


SWIFT_CLASS("_TtC8GOQiiSDK19GoqiiNetworkManager")
@interface GoqiiNetworkManager : AFHTTPSessionManager
+ (void)initNetworkManager SWIFT_METHOD_FAMILY(none);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithBaseURL:(NSURL * _Nullable)url sessionConfiguration:(NSURLSessionConfiguration * _Nullable)configuration SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS_NAMED("GoqiiRewardPointData")
@interface GoqiiRewardPointData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface GoqiiRewardPointData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable actionCode;
@property (nonatomic, copy) NSString * _Nullable animationType;
@property (nonatomic, copy) NSString * _Nullable displayType;
@property (nonatomic, copy) NSString * _Nullable eventId;
@property (nonatomic, copy) NSString * _Nullable rewardPoints;
@property (nonatomic, copy) NSString * _Nullable skipLimit;
@property (nonatomic, copy) NSString * _Nullable targetVal;
@end


SWIFT_CLASS_NAMED("HRVStressData")
@interface HRVStressData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface HRVStressData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityId;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable hrvValue;
@property (nonatomic, copy) NSString * _Nullable l_activityid;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable stressValue;
@end


SWIFT_CLASS_NAMED("HabitCheckinsData")
@interface HabitCheckinsData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface HabitCheckinsData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable checkinId;
@property (nonatomic, copy) NSString * _Nullable cumulativecheckins;
@property (nonatomic, copy) NSString * _Nullable current_streak;
@property (nonatomic, copy) NSString * _Nullable followed_days;
@property (nonatomic, copy) NSString * _Nullable habitId;
@property (nonatomic, copy) NSString * _Nullable longest_streak;
@property (nonatomic, copy) NSString * _Nullable month;
@property (nonatomic, copy) NSString * _Nullable reminderValue;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable total_days;
@property (nonatomic, copy) NSString * _Nullable year;
@end


SWIFT_CLASS_NAMED("HealthRecordData")
@interface HealthRecordData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface HealthRecordData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable attachmentId;
@property (nonatomic, copy) NSDate * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable documentFor;
@property (nonatomic, copy) NSString * _Nullable documentName;
@property (nonatomic, copy) NSString * _Nullable documentType;
@property (nonatomic, copy) NSString * _Nullable documentTypeRel;
@property (nonatomic, copy) NSString * _Nullable fileLink;
@property (nonatomic, copy) NSString * _Nullable fileName;
@property (nonatomic, copy) NSString * _Nullable localFileLink;
@property (nonatomic, copy) NSString * _Nullable recordId;
@property (nonatomic, copy) NSString * _Nullable sharedWithGoqii;
@end


SWIFT_CLASS_NAMED("HeartRateData")
@interface HeartRateData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface HeartRateData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityId;
@property (nonatomic, copy) NSString * _Nullable activityText;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable groupId;
@property (nonatomic, copy) NSString * _Nullable heartRate;
@property (nonatomic, copy) NSString * _Nullable isVisible;
@property (nonatomic, copy) NSString * _Nullable l_activityId;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable logFrom;
@property (nonatomic, copy) NSString * _Nullable source;
@property (nonatomic, copy) NSString * _Nullable status;
@end


SWIFT_AVAILABILITY(ios,introduced=10.0)
@interface HeartRateData (SWIFT_EXTENSION(GOQiiSDK))
/// Creates new HeartRateData or Updates the existing HeartRateData object.
/// \param dictionary Dictionary containing the HeartRateData values
///
/// \param context Core data context
///
+ (HeartRateData * _Nonnull)initOrUpdateWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary shouldCheckHeartRateAndGroupId:(BOOL)shouldCheckHeartRateAndGroupId inContext:(NSManagedObjectContext * _Nonnull)context SWIFT_METHOD_FAMILY(none);
/// Retrieves the Recent Heart Rate Data based on createTime.
/// \param context Coredata context
///
///
/// returns:
/// HeartRateData
+ (HeartRateData * _Nullable)getRecentHeartRateDataByCreatedTimeFromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Retrieves the Recent Heart Rate Data based on createTime.
/// \param context Coredata context
///
///
/// returns:
/// HeartRateData
+ (HeartRateData * _Nullable)getRecentHeartRateDataByCreatedTimeWithGroupId:(NSString * _Nonnull)groupId fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Retrieves the Recent Last Heart Rate Data based on logDate.
/// \param context Coredata context
///
///
/// returns:
/// HeartRateData
+ (HeartRateData * _Nullable)getLastHeartRateDataByLogDateWithLogDate:(NSString * _Nonnull)logDate fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (void)getLatestHrDataWithLogDate:(NSString * _Nonnull)logDate fromContext:(NSManagedObjectContext * _Nonnull)context completion:(void (^ _Nonnull)(HeartRateData * _Nullable))completion;
+ (void)getLatestHrDataFromContext:(NSManagedObjectContext * _Nonnull)context completion:(void (^ _Nonnull)(HeartRateData * _Nullable))completion;
/// Retrieves the Recent Heart Rate Data based on logDate.
/// \param context Coredata context
///
///
/// returns:
/// HeartRateData
+ (HeartRateData * _Nullable)getRecentHeartRateDataByLogDateFromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<HeartRateData *> * _Nullable)getAllHeartRateBetweenLogDatesWithStartDate:(NSString * _Nonnull)startDate endDate:(NSString * _Nonnull)endDate SWIFT_WARN_UNUSED_RESULT;
/// Get Min and Max heart rate with matching <code>groupId</code>.
/// \param groupId groupId
///
/// \param context Coredata context
///
///
/// returns:
/// Array containing min and max heart rate as String, respectively, i.e. [minHeartRate, maxHeartRate]
+ (NSArray<NSString *> * _Nullable)getMinMaxHeartRateForGroupId:(NSString * _Nonnull)groupId fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Get Min, Max and Avg heart rate with matching <code>groupId</code>.
/// \param groupId groupId
///
/// \param context Coredata context
///
///
/// returns:
/// Array containing min, max & avg heart rate as String, respectively, i.e. [minHeartRate, maxHeartRate, avgHeartRate]
+ (NSArray<NSString *> * _Nullable)getMinMaxAvgHeartRateForGroupId:(NSString * _Nonnull)groupId fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Get Min, Max and Avg heart rate with given date
/// \param createdTime createdTime
///
/// \param startDate start date of week
///
/// \param endDate end date of week
///
/// \param context Coredata context
///
///
/// returns:
/// Array containing min, max & avg heart rate as String, respectively, i.e. [minHeartRate, maxHeartRate, avgHeartRate]
+ (NSArray<NSString *> * _Nullable)getMinMaxAvgHRForTimeWithStartDate:(NSString * _Nonnull)startDate endDate:(NSString * _Nonnull)endDate fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Calculates average heart rate for given date.
/// \param createdTime createdTime
///
/// \param context Coredata context
///
///
/// returns:
/// Average heart rate
+ (NSString * _Nullable)getAverageHeartRateForCreatedTime:(NSString * _Nonnull)createdTime fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Calculates average heart rate for given date.
/// \param createdTime createdTime
///
/// \param context Coredata context
///
///
/// returns:
/// Average heart rate
+ (NSString * _Nullable)getAverageHeartRateWithSlotsForCreatedTime:(NSString * _Nonnull)createdTime fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Calculates average heart rate for given date.
/// \param createdTime createdTime
///
/// \param startDate start date of week
///
/// \param endDate end date of week
///
/// \param context Coredata context
///
///
/// returns:
/// Average heart rate
+ (NSString * _Nullable)getAverageHeartRateForTimeWithStartDate:(NSString * _Nonnull)startDate endDate:(NSString * _Nonnull)endDate fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Calculates average heart rate for given date.
/// \param createdTime createdTime
///
/// \param startDate start date of week
///
/// \param endDate end date of week
///
/// \param context Coredata context
///
///
/// returns:
/// Average heart rate
+ (NSString * _Nullable)getAverageHeartRateForCreatedTimeWithStartDate:(NSString * _Nonnull)startDate endDate:(NSString * _Nonnull)endDate fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Get all heart rate data grouped by groupId.
/// \param context Coredata context
///
///
/// returns:
/// Array of HeartRateData
+ (NSArray<NSDictionary<NSString *, id> *> * _Nullable)getAllGroupedByGroupIdFromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Get record count matching with the groupId.
/// \param groupId groupId
///
/// \param context Coredata context
///
///
/// returns:
/// Record Count
+ (NSString * _Nullable)getRecordCountWithGroupId:(NSString * _Nonnull)groupId fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Get new record count.
/// \param context Coredata context
///
///
/// returns:
/// Record count
+ (NSString * _Nullable)getNewRecordCountFromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Get distinct ‘groupId’s of New heart rate data records.
/// \param context Coredata context
///
///
/// returns:
/// Array of dictionary with ‘groupId’
+ (NSArray<NSDictionary<NSString *, id> *> * _Nullable)getDistinctGroupIdsOfNewRecordsFromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Update multiple heart rate data with matching predicate.
/// \param predicate Predicate
///
/// \param propertiesToUpdate Dictionary containing properties to update
///
/// \param context Coredata context
///
+ (void)updateMultipleDataWithPredicate:(NSPredicate * _Nonnull)predicate propertiesToUpdate:(NSDictionary<NSString *, NSString *> * _Nonnull)propertiesToUpdate inContext:(NSManagedObjectContext * _Nonnull)context;
/// Get HeartRateData matching with specified predicate and sort order.
/// \param predicate Predicate to match the HeartRateData with.
///
/// \param sortDescriptors Sorting order of HeartRateData
///
/// \param context Core data context
///
///
/// returns:
/// Optional array of HeartRateData
+ (NSArray<HeartRateData *> * _Nullable)getDataWithPredicate:(NSPredicate * _Nullable)predicate sortDescriptors:(NSArray<NSSortDescriptor *> * _Nullable)sortDescriptors fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (void)updateStatusOldAll;
+ (void)deleteAllHeartRateData;
@end


SWIFT_CLASS_NAMED("InsuranceRecordData")
@interface InsuranceRecordData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface InsuranceRecordData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable attachmentId;
@property (nonatomic, copy) NSDate * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable documentFor;
@property (nonatomic, copy) NSString * _Nullable documentName;
@property (nonatomic, copy) NSString * _Nullable documentType;
@property (nonatomic, copy) NSString * _Nullable expiryDate;
@property (nonatomic, copy) NSString * _Nullable fileLink;
@property (nonatomic, copy) NSString * _Nullable fileName;
@property (nonatomic, copy) NSString * _Nullable insuranceDocId;
@property (nonatomic, copy) NSString * _Nullable insuranceFrom;
@property (nonatomic, copy) NSString * _Nullable insurerBrand;
@property (nonatomic, copy) NSString * _Nullable localFileLink;
@property (nonatomic, copy) NSString * _Nullable localHealthRecordId;
@property (nonatomic, copy) NSString * _Nullable reminder;
@property (nonatomic, copy) NSString * _Nullable sharedWithGoqii;
@property (nonatomic, copy) NSString * _Nullable startDate;
@end


@protocol OmronBluetoothManagerDelegate;

SWIFT_CLASS("_TtC8GOQiiSDK21OmronBluetoothManager")
@interface OmronBluetoothManager : NSObject <CBCentralManagerDelegate, CBPeripheralDelegate>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) OmronBluetoothManager * _Nonnull sharedInstance;)
+ (OmronBluetoothManager * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, strong) id <OmronBluetoothManagerDelegate> _Nullable delegate;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)centralManagerDidUpdateState:(CBCentralManager * _Nonnull)central;
- (void)initaliseBle;
- (void)startScanning;
- (void)connectAndSync;
- (void)disconnect;
- (void)centralManager:(CBCentralManager * _Nonnull)central didDiscoverPeripheral:(CBPeripheral * _Nonnull)peripheral advertisementData:(NSDictionary<NSString *, id> * _Nonnull)advertisementData RSSI:(NSNumber * _Nonnull)RSSI;
- (void)centralManager:(CBCentralManager * _Nonnull)central didConnectPeripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)centralManager:(CBCentralManager * _Nonnull)central didDisconnectPeripheral:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverServices:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverCharacteristicsForService:(CBService * _Nonnull)service error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didUpdateValueForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
@end


SWIFT_PROTOCOL("_TtP8GOQiiSDK29OmronBluetoothManagerDelegate_")
@protocol OmronBluetoothManagerDelegate
- (void)didInitializeWithIsSuccessfully:(BOOL)isSuccessfully;
- (void)didFindDeviceWithIsSuccessfully:(BOOL)isSuccessfully;
- (void)didConnectDeviceWithIsSuccessfully:(BOOL)isSuccessfully macId:(NSString * _Nonnull)macId;
- (void)didDisconnectDeviceWithIsSuccessfully:(BOOL)isSuccessfully;
- (void)didReceiveBloodPressureData:(NSDictionary<NSString *, id> * _Nonnull)data;
@end


SWIFT_CLASS("_TtC8GOQiiSDK19OneTouchB59XManager")
@interface OneTouchB59XManager : NSObject <CBCentralManagerDelegate, CBPeripheralDelegate>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)centralManagerDidUpdateState:(CBCentralManager * _Nonnull)central;
- (void)centralManager:(CBCentralManager * _Nonnull)central didDiscoverPeripheral:(CBPeripheral * _Nonnull)peripheral advertisementData:(NSDictionary<NSString *, id> * _Nonnull)advertisementData RSSI:(NSNumber * _Nonnull)RSSI;
- (void)centralManager:(CBCentralManager * _Nonnull)central didConnectPeripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverServices:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverCharacteristicsForService:(CBService * _Nonnull)service error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didUpdateNotificationStateForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didUpdateValueForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
- (void)centralManager:(CBCentralManager * _Nonnull)central didFailToConnectPeripheral:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
- (void)centralManager:(CBCentralManager * _Nonnull)central didDisconnectPeripheral:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
- (void)doWriteWithPeripheral:(CBPeripheral * _Nonnull)peripheral characteristic:(CBCharacteristic * _Nonnull)characteristic message:(NSArray<NSNumber *> * _Nonnull)message;
- (void)syncWithSeq:(NSInteger)seq glucometer:(CBPeripheral * _Nonnull)glucometer RACP:(CBCharacteristic * _Nonnull)RACP;
@end


SWIFT_CLASS_NAMED("PaceData")
@interface PaceData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface PaceData (SWIFT_EXTENSION(GOQiiSDK))
/// Creates new PaceData or Updates the existing PaceData object.
/// \param dictionary Dictionary containing the PaceData values
///
/// \param context Core data context
///
+ (PaceData * _Nonnull)initOrUpdateWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary inContext:(NSManagedObjectContext * _Nonnull)context SWIFT_METHOD_FAMILY(none);
/// Get PaceData matching with specified predicate and sort order.
/// \param predicate Predicate to match the PaceData with.
///
/// \param sortDescriptors Sorting order of PaceData
///
/// \param context Core data context
///
///
/// returns:
/// Optional array of PaceData
+ (NSArray<PaceData *> * _Nullable)getDataWithPredicate:(NSPredicate * _Nullable)predicate sortDescriptors:(NSArray<NSSortDescriptor *> * _Nullable)sortDescriptors fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (void)deleteAllRecords;
@end


@interface PaceData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable distMode;
@property (nonatomic, copy) NSString * _Nullable kmCovered;
@property (nonatomic, copy) NSString * _Nullable lat;
@property (nonatomic, copy) NSString * _Nullable lng;
@property (nonatomic, copy) NSString * _Nullable logDateTime;
@property (nonatomic, copy) NSString * _Nullable perKmDuration;
@end


SWIFT_CLASS_NAMED("PhoneActivityData")
@interface PhoneActivityData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@class DeviceExerciseV3;

@interface PhoneActivityData (SWIFT_EXTENSION(GOQiiSDK))
/// Creates new PhoneActivityData or Updates the existing PhoneActivityData object.
/// \param dictionary Dictionary containing the PhoneActivityData values
///
/// \param context Core data context
///
+ (PhoneActivityData * _Nonnull)initOrUpdateWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary inContext:(NSManagedObjectContext * _Nonnull)context SWIFT_METHOD_FAMILY(none);
/// Creates new PhoneActivityData or Updates the existing PhoneActivityData object.
/// \param dictionary Dictionary containing the PhoneActivityData values
///
/// \param context Core data context
///
+ (PhoneActivityData * _Nonnull)saveOrUpdateWithoutDistinctCreatedTimeWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary inContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Retrieves the Phone Activity matching the specified activityId or createTime.
/// \param activityId activityId
///
/// \param createTime createTime
///
/// \param context Coredata context
///
///
/// returns:
/// PhoneActivityData
+ (PhoneActivityData * _Nullable)getPhoneActivityDataWithLocalActivityId:(NSString * _Nullable)localActivityId serverActivityId:(NSString * _Nullable)serverActivityId createTime:(NSString * _Nullable)createTime fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Map data values to the object.
/// \param dictionary Dictionary containing the values.
///
- (void)mapValuesFromDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary forUpdate:(BOOL)update;
/// Map values from DeviceExerciseV3.
/// \param deviceExercise DeviceExerciseV3
///
- (void)mapValuesFromDeviceExercise:(DeviceExerciseV3 * _Nonnull)deviceExercise;
/// Get all the PhoneActivityData stored in the context specified.
/// \param context Core data context
///
///
/// returns:
/// Optional array of PhoneActivityData
+ (NSArray<PhoneActivityData *> * _Nullable)getAllFromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Get PhoneActivityData matching with specified predicate and sort order.
/// \param predicate Predicate to match the PhoneActivityData with.
///
/// \param sortDescriptors Sorting order of PhoneActivityData
///
/// \param context Core data context
///
///
/// returns:
/// Optional array of PhoneActivityData
+ (NSArray<PhoneActivityData *> * _Nullable)getDataWithPredicate:(NSPredicate * _Nullable)predicate sortDescriptors:(NSArray<NSSortDescriptor *> * _Nullable)sortDescriptors fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Retrieves the max value of ‘activityId’ in the context
/// \param context Coredata context
///
///
/// returns:
/// max value of activityId
+ (NSString * _Nullable)getMaxActivityIdFromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Calculates sum of Duration for given ‘logDate’.
/// \param logDate logDate
///
/// \param context Coredata context
///
///
/// returns:
/// Sum of Duration
+ (NSString * _Nullable)getSumOfDurationForLogDate:(NSString * _Nonnull)logDate fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Calculates sum of Duration between given start and end ‘logDate’.
/// \param logDate logDate
///
/// \param context Coredata context
///
///
/// returns:
/// Sum of Duration
+ (NSString * _Nullable)getSumOfDurationFromStartDate:(NSString * _Nonnull)startDate toEndDate:(NSString * _Nonnull)endDate fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Calculates sum of Calories burnt for given ‘logDate’.
/// \param logDate logDate
///
/// \param context Coredata context
///
///
/// returns:
/// Sum of Calories Burnt
+ (NSString * _Nullable)getSumOfCaloriesBurntForLogDate:(NSString * _Nonnull)logDate fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Calculates sum of Calories Burnt between given start and end ‘logDate’.
/// \param logDate logDate
///
/// \param context Coredata context
///
///
/// returns:
/// Sum of Calories Burnt
+ (NSString * _Nullable)getSumOfCaloriesBurntFromStartDate:(NSString * _Nonnull)startDate toEndDate:(NSString * _Nonnull)endDate fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Get new record count.
/// \param context Coredata context
///
///
/// returns:
/// Record count
+ (NSString * _Nullable)getNewRecordCountFromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Get offline deleted record count.
/// \param context Coredata context
///
///
/// returns:
/// Record count
+ (NSString * _Nullable)getOfflineDeletedRecordCountFromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Update all PhoneActivityData with status as ‘inprogress’ to ‘new’.
/// \param context Coredata context
///
+ (void)updateStatusOfInProgressDataToNewInContext:(NSManagedObjectContext * _Nonnull)context;
/// Generates ActivityFeed object from current object.
///
/// returns:
/// ActivityFeed
/// /        if (logFrom == “play” || logFrom == “playposedetection” || logFrom == “goqiipro”) {
/// /
/// /            if let jsonDataString = self.jsonData,
/// /                let jsonData = jsonDataString.data(using: .utf8),
/// /                let jsonDataDict = try? JSONSerialization.jsonObject(with: jsonData, options: []) as? [String:Any] {
/// /                feed.fSN = String(jsonDataDict[“screenNumber”]).int32Value
/// /                feed.fSSN = String(jsonDataDict[“subScreenNumber”]).int32Value
/// /                feed.fAI = String(jsonDataDict[“additionalValue”])
/// /                feed.navigationType = String(jsonDataDict[“navigationType”]).int32Value
/// /
/// /                let additionalValueString = String(jsonDataDict[“additionalValue”])
/// /
/// /                if let additionalValueData = additionalValueString.data(using: .utf8),
/// /                    let additionalValueDataDict = try? JSONSerialization.jsonObject(with: additionalValueData, options: []) as? [String:Any] {
/// /                    feed.activityText = String(additionalValueDataDict[“activityText”])
/// /                }
/// /            }
/// /
/// /        }
+ (void)deleteDataIsDeletedFromContext:(NSManagedObjectContext * _Nonnull)context;
/// Generates PhoneActivity object from current object.
///
/// returns:
/// PhoneActivity
+ (void)getNewActivitiesWithServerImageWithCompletionHandler:(void (^ _Nonnull)(NSArray<PhoneActivityData *> * _Nullable))completionHandler;
+ (PhoneActivityData * _Nullable)getActivityWithLocalActivityId:(NSString * _Nullable)localActivityId serverActivityId:(NSString * _Nullable)serverActivityId fromContext:(NSManagedObjectContext * _Nullable)context SWIFT_WARN_UNUSED_RESULT;
+ (void)deleteAllPhoneActivityData;
@end


@interface PhoneActivityData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityId;
@property (nonatomic, copy) NSString * _Nullable activityImage;
@property (nonatomic, copy) NSString * _Nullable activityName;
@property (nonatomic, copy) NSString * _Nullable activityText;
@property (nonatomic, copy) NSString * _Nullable caloriesBurnt;
@property (nonatomic, copy) NSString * _Nullable commentsCount;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable discription;
@property (nonatomic, copy) NSString * _Nullable distance;
@property (nonatomic, copy) NSString * _Nullable duration;
@property (nonatomic, copy) NSString * _Nullable durationSec;
@property (nonatomic, copy) NSString * _Nullable endTime;
@property (nonatomic, copy) NSString * _Nullable gpsData;
@property (nonatomic, copy) NSString * _Nullable gpsDerivedData;
@property (nonatomic, copy) NSString * _Nullable heartData;
@property (nonatomic, copy) NSString * _Nullable heightAspectRatio;
@property (nonatomic, copy) NSString * _Nullable id1;
@property (nonatomic, copy) NSString * _Nullable id2;
@property (nonatomic, copy) NSString * _Nullable imageWidth;
@property (nonatomic, copy) NSString * _Nullable intensity;
@property (nonatomic) BOOL is_deleted;
@property (nonatomic) BOOL isCommentByMe;
@property (nonatomic, copy) NSString * _Nullable isLikeByMe;
@property (nonatomic, copy) NSString * _Nullable jsonData;
@property (nonatomic, copy) NSString * _Nullable l_activityId;
@property (nonatomic, copy) NSString * _Nullable likesCount;
@property (nonatomic, copy) NSString * _Nullable localActivityImage;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable logFrom;
@property (nonatomic, copy) NSString * _Nullable pointData;
@property (nonatomic, copy) NSString * _Nullable privacyType;
@property (nonatomic, copy) NSString * _Nullable shareLink;
@property (nonatomic, copy) NSString * _Nullable simplifiedData;
@property (nonatomic, copy) NSString * _Nullable source;
@property (nonatomic, copy) NSString * _Nullable startTime;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable steps;
@property (nonatomic, copy) NSString * _Nullable unit;
@property (nonatomic, copy) NSString * _Nullable userId;
@end


SWIFT_CLASS_NAMED("PlayOfflineData")
@interface PlayOfflineData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface PlayOfflineData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable analyticsItems;
@property (nonatomic, copy) NSString * _Nullable category;
@property (nonatomic, copy) NSString * _Nullable downloadedURL;
@property (nonatomic, copy) NSString * _Nullable downloadIdentifier;
@property (nonatomic, copy) NSString * _Nullable duration;
@property (nonatomic) BOOL enableHR;
@property (nonatomic, copy) NSString * _Nullable energyPointMultiplier;
@property (nonatomic) float heightAspectRatio;
@property (nonatomic) BOOL isSubsCribed;
@property (nonatomic) BOOL isVideoDownloaded;
@property (nonatomic) BOOL isVideoViewed;
@property (nonatomic, copy) NSString * _Nullable isWorkout;
@property (nonatomic, copy) NSString * _Nullable itemType;
@property (nonatomic, copy) NSString * _Nullable onTap;
@property (nonatomic) int64_t profileId;
@property (nonatomic, copy) NSString * _Nullable shareArena;
@property (nonatomic, copy) NSString * _Nullable shareOutside;
@property (nonatomic, copy) NSString * _Nullable shareText;
@property (nonatomic) BOOL showSuggestions;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable streamerImageUrl;
@property (nonatomic, copy) NSString * _Nullable streamerName;
@property (nonatomic, copy) NSString * _Nullable streamUrl;
@property (nonatomic, copy) NSString * _Nullable thumbnail;
@property (nonatomic, copy) NSString * _Nullable title;
@property (nonatomic, copy) NSString * _Nullable videoDescription;
@property (nonatomic) BOOL videoearlyexitrating;
@property (nonatomic) int64_t videoId;
@property (nonatomic) BOOL videostarrating;
@property (nonatomic, copy) NSString * _Nullable videoType;
@property (nonatomic, copy) NSString * _Nullable workoutRoutine;
@property (nonatomic, copy) NSString * _Nullable workoutType;
@end


SWIFT_CLASS("_TtC8GOQiiSDK16RNNetworkManager")
@interface RNNetworkManager : AFHTTPSessionManager
+ (void)initNetworkManager SWIFT_METHOD_FAMILY(none);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
+ (void)requestPostDataWithMethodEndPoint:(NSString * _Nonnull)methodEndpoint withParam:(NSDictionary * _Nonnull)param completion:(void (^ _Nonnull)(NSDictionary * _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)initWithBaseURL:(NSURL * _Nullable)url sessionConfiguration:(NSURLSessionConfiguration * _Nullable)configuration SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS_NAMED("RealTimeTemperatureHRData")
@interface RealTimeTemperatureHRData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface RealTimeTemperatureHRData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityId;
@property (nonatomic, copy) NSString * _Nullable calories;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable heartRate;
@property (nonatomic, copy) NSString * _Nullable l_activityid;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable steps;
@property (nonatomic, copy) NSString * _Nullable temperature;
@end


SWIFT_CLASS_NAMED("ReminderData")
@interface ReminderData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface ReminderData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityType;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable daysOfWeek;
@property (nonatomic, copy) NSString * _Nullable endDate;
@property (nonatomic, copy) NSString * _Nullable iconType;
@property (nonatomic, copy) NSString * _Nullable isdeleted;
@property (nonatomic, copy) NSString * _Nullable l_reminderId;
@property (nonatomic, copy) NSString * _Nullable notificationType;
@property (nonatomic, copy) NSString * _Nullable onStatus;
@property (nonatomic, copy) NSString * _Nullable reminderActivityId;
@property (nonatomic, copy) NSString * _Nullable reminderBy;
@property (nonatomic, copy) NSString * _Nullable reminderEndTime;
@property (nonatomic, copy) NSString * _Nullable reminderId;
@property (nonatomic, copy) NSString * _Nullable reminderOccurrences;
@property (nonatomic, copy) NSString * _Nullable reminderText;
@property (nonatomic, copy) NSString * _Nullable reminderTime;
@property (nonatomic, copy) NSString * _Nullable reminderType;
@property (nonatomic, copy) NSString * _Nullable repeatingDays;
@property (nonatomic, copy) NSString * _Nullable repeatInterval;
@property (nonatomic, copy) NSString * _Nullable startDate;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable uid;
@property (nonatomic, copy) NSString * _Nullable userId;
@end


SWIFT_CLASS("_TtC8GOQiiSDK10SDKManager")
@interface SDKManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SDKManager * _Nonnull sharedInstance;)
+ (SDKManager * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)initialize;
- (void)navigateToHome:(UIViewController * _Nonnull)vc;
@end


SWIFT_CLASS_NAMED("SPO2Data")
@interface SPO2Data : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface SPO2Data (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityId;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable l_activityid;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable spo2Value;
@property (nonatomic, copy) NSString * _Nullable status;
@end


SWIFT_AVAILABILITY(ios,introduced=10.0)
@interface SPO2Data (SWIFT_EXTENSION(GOQiiSDK))
/// Creates new SPO2Data or Updates the existing SPO2Data object.
/// \param dictionary Dictionary containing the SPO2Data values
///
/// \param context Core data context
///
+ (SPO2Data * _Nonnull)initOrUpdateWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary inContext:(NSManagedObjectContext * _Nonnull)context SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
/// Map data values to the object.
/// \param dictionary Dictionary containing the values.
///
- (void)mapValuesFromDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary;
/// Get all the SPO2Data stored in the context specified.
/// \param context Core data context
///
///
/// returns:
/// Optional array of GPSBandData
+ (NSArray<SPO2Data *> * _Nullable)getAllFromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Get SPO2Data matching with specified predicate and sort order.
/// \param predicate Predicate to match the SPO2Data with.
///
/// \param sortDescriptors Sorting order of SPO2Data
///
/// \param context Core data context
///
///
/// returns:
/// Optional array of SPO2Data
+ (NSArray<SPO2Data *> * _Nullable)getDataWithPredicate:(NSPredicate * _Nullable)predicate sortDescriptors:(NSArray<NSSortDescriptor *> * _Nullable)sortDescriptors fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)deleteDataWithPredicate:(NSPredicate * _Nullable)predicate sortDescriptors:(NSArray<NSSortDescriptor *> * _Nullable)sortDescriptors fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (void)updateDataBasedOnResponseWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary inContext:(NSManagedObjectContext * _Nonnull)context;
/// Calculates average heart rate for given date.
/// \param createdTime createdTime
///
/// \param startDate start date of week
///
/// \param endDate end date of week
///
/// \param context Coredata context
///
///
/// returns:
/// Average heart rate
+ (NSString * _Nullable)getAverageSpO2BetweenLogDatesWithStartDate:(NSString * _Nonnull)startDate endDate:(NSString * _Nonnull)endDate fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)getAverageSpO2ForLogDate:(NSString * _Nonnull)date fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (SPO2Data * _Nullable)getRecentSpO2DataWithDate:(NSString * _Nonnull)date SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<SPO2Data *> * _Nullable)getAllSpO2BetweenLogDatesWithStartDate:(NSString * _Nonnull)startDate endDate:(NSString * _Nonnull)endDate SWIFT_WARN_UNUSED_RESULT;
+ (void)updateStatusOldAll;
+ (SPO2Data * _Nullable)getLastSPO2Data SWIFT_WARN_UNUSED_RESULT;
/// Retrieves the max value of ‘createdTime’ in the context
/// \param context Coredata context
///
///
/// returns:
/// max value of logDateTime
+ (NSString * _Nullable)getMaxLogDateTimeFromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getJSONString SWIFT_WARN_UNUSED_RESULT;
+ (void)getJSONStringWithCompletion:(void (^ _Nonnull)(NSString * _Nonnull))completion;
+ (void)batchInsertsWithSpO2Values:(NSArray<NSDictionary<NSString *, id> *> * _Nonnull)SpO2Values;
+ (void)deleteAllSPO2Data;
@end


SWIFT_CLASS_NAMED("SkipDetailData")
@interface SkipDetailData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface SkipDetailData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable endlogDateTime;
@property (nonatomic, copy) NSString * _Nullable l_skipDetail_Id;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable logDateTime;
@property (nonatomic, copy) NSString * _Nullable skipdetail_Id;
@property (nonatomic, copy) NSString * _Nullable skips;
@property (nonatomic, copy) NSString * _Nullable status;
@end


SWIFT_CLASS_NAMED("SleepBandData")
@interface SleepBandData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@class DeviceSleepV3;

@interface SleepBandData (SWIFT_EXTENSION(GOQiiSDK))
/// Creates new SleepBandData or Updates the existing SleepBandData object.
/// \param dictionary Dictionary containing the SleepBandData values
///
/// \param context Core data context
///
+ (SleepBandData * _Nonnull)initOrUpdateWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary inContext:(NSManagedObjectContext * _Nonnull)context SWIFT_METHOD_FAMILY(none);
/// Map data values to the object.
/// \param dictionary Dictionary containing the values.
///
- (void)mapValuesFromDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary;
/// Get all the SleepBandData stored in the context specified.
/// \param context Core data context
///
///
/// returns:
/// Optional array of SleepBandData
+ (NSArray<SleepBandData *> * _Nullable)getAllFromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Get SleepBandData matching with specified predicate and sort order.
/// \param predicate Predicate to match the SleepBandData with.
///
/// \param sortDescriptors Sorting order of SleepBandData
///
/// \param context Core data context
///
///
/// returns:
/// Optional array of SleepBandData
+ (NSArray<SleepBandData *> * _Nullable)getDataWithPredicate:(NSPredicate * _Nullable)predicate sortDescriptors:(NSArray<NSSortDescriptor *> * _Nullable)sortDescriptors fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<SleepBandData *> * _Nullable)getDataWithLimitWithPredicate:(NSPredicate * _Nullable)predicate sortDescriptors:(NSSortDescriptor * _Nullable)sortDescriptors limits:(NSInteger)limits fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (SleepBandData * _Nullable)getSingleDataWithPredicate:(NSPredicate * _Nullable)predicate inContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (SleepBandData * _Nullable)getRecentSleepBandDataByLogDateFromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Get sum totalSteps with matching <code>totalSteps</code>.
/// \param weightLogId totalSteps
///
/// \param context Coredata context
///
///
/// returns:
/// Array containing min and max heart rate as String, respectively, i.e. [sum totalSteps]
+ (NSDictionary<NSString *, id> * _Nullable)getSumTotalSleepBandDataWithPredicate:(NSPredicate * _Nullable)predicate expressionName:(NSString * _Nonnull)expressionName expressionName2:(NSString * _Nonnull)expressionName2 expressionName3:(NSString * _Nonnull)expressionName3 expressionName4:(NSString * _Nonnull)expressionName4 fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (NSDictionary<NSString *, id> * _Nullable)getDistinctDataWithPredicate:(NSPredicate * _Nullable)predicate expressionName:(NSString * _Nonnull)expressionName fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (NSDictionary<NSString *, id> * _Nullable)getMaxMinDataWithPredicate:(NSPredicate * _Nullable)predicate expressionName:(NSString * _Nonnull)expressionName expressionName2:(NSString * _Nonnull)expressionName2 fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
- (DeviceSleepV3 * _Nonnull)toSleepBandActivity SWIFT_WARN_UNUSED_RESULT;
+ (NSDictionary * _Nonnull)convertSleepBandActivityToDict:(DeviceSleepV3 * _Nonnull)data SWIFT_WARN_UNUSED_RESULT;
+ (void)deleteAllSleepBandData;
@end


@interface SleepBandData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityId;
@property (nonatomic, copy) NSString * _Nullable activityType;
@property (nonatomic, copy) NSString * _Nullable almostAwake;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable deepSleep;
@property (nonatomic, copy) NSString * _Nullable descriptionCount;
@property (nonatomic, copy) NSString * _Nullable discription;
@property (nonatomic, copy) NSString * _Nullable id1;
@property (nonatomic, copy) NSString * _Nullable id2;
@property (nonatomic, copy) NSString * _Nullable l_activityId;
@property (nonatomic, copy) NSString * _Nullable lightSleep;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable logDateTime;
@property (nonatomic, copy) NSString * _Nullable logEndTime;
@property (nonatomic, copy) NSString * _Nullable s1;
@property (nonatomic, copy) NSString * _Nullable s2;
@property (nonatomic, copy) NSString * _Nullable s3;
@property (nonatomic, copy) NSString * _Nullable s4;
@property (nonatomic, copy) NSString * _Nullable s5;
@property (nonatomic, copy) NSString * _Nullable s6;
@property (nonatomic, copy) NSString * _Nullable s7;
@property (nonatomic, copy) NSString * _Nullable s8;
@property (nonatomic, copy) NSString * _Nullable status;
@end


SWIFT_CLASS_NAMED("SleepLogData")
@interface SleepLogData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface SleepLogData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityText;
@property (nonatomic, copy) NSString * _Nullable awakeTime;
@property (nonatomic, copy) NSString * _Nullable comment;
@property (nonatomic, copy) NSString * _Nullable commentByMe;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable duration;
@property (nonatomic, copy) NSString * _Nullable isdeleted;
@property (nonatomic, copy) NSString * _Nullable l_sleepLogId;
@property (nonatomic, copy) NSString * _Nullable likeByMe;
@property (nonatomic, copy) NSString * _Nullable likes;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable logType;
@property (nonatomic, copy) NSString * _Nullable minutesAsleep;
@property (nonatomic, copy) NSString * _Nullable privacyType;
@property (nonatomic, copy) NSString * _Nullable rating;
@property (nonatomic, copy) NSString * _Nullable sleepLogId;
@property (nonatomic, copy) NSString * _Nullable sleptTime;
@property (nonatomic, copy) NSString * _Nullable source;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable timeInBed;
@property (nonatomic, copy) NSString * _Nullable userId;
@end


SWIFT_CLASS_NAMED("SmartcardData")
@interface SmartcardData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface SmartcardData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable actionUrlIos;
@property (nonatomic, copy) NSString * _Nullable additionId;
@property (nonatomic, copy) NSString * _Nullable allowSocial;
@property (nonatomic, copy) NSString * _Nullable allowSwiping;
@property (nonatomic, copy) NSString * _Nullable analyticsItems;
@property (nonatomic, copy) NSString * _Nullable apiParam;
@property (nonatomic, copy) NSString * _Nullable cardActionColor1;
@property (nonatomic, copy) NSString * _Nullable cardActionColor2;
@property (nonatomic, copy) NSString * _Nullable cardActionText1;
@property (nonatomic, copy) NSString * _Nullable cardActionText2;
@property (nonatomic, copy) NSString * _Nullable cardActionType;
@property (nonatomic, copy) NSString * _Nullable cardBackgroundColor;
@property (nonatomic, copy) NSString * _Nullable cardDescription;
@property (nonatomic, copy) NSString * _Nullable cardDescriptionColor;
@property (nonatomic, copy) NSString * _Nullable cardExpiry;
@property (nonatomic, copy) NSString * _Nullable cardIconUrl;
@property (nonatomic, copy) NSString * _Nullable cardImageBackground;
@property (nonatomic, copy) NSString * _Nullable cardImageType;
@property (nonatomic, copy) NSString * _Nullable cardImageUrl;
@property (nonatomic, copy) NSString * _Nullable cardLayoutType;
@property (nonatomic, copy) NSString * _Nullable cardName;
@property (nonatomic, copy) NSString * _Nullable cardPosition;
@property (nonatomic, copy) NSString * _Nullable cardShareDescription;
@property (nonatomic, copy) NSString * _Nullable cardSubTitle;
@property (nonatomic, copy) NSString * _Nullable cardTitle;
@property (nonatomic, copy) NSString * _Nullable cardTitleColor;
@property (nonatomic, copy) NSString * _Nullable cardType;
@property (nonatomic, copy) NSString * _Nullable cardVisibility;
@property (nonatomic, copy) NSString * _Nullable iosSQL;
@property (nonatomic, copy) NSString * _Nullable isBlocker;
@property (nonatomic, copy) NSString * _Nullable isdeleted;
@property (nonatomic, copy) NSString * _Nullable isOfflinePossible;
@property (nonatomic, copy) NSString * _Nullable isServerValidationRequired;
@property (nonatomic, copy) NSString * _Nullable isVisibleHourSet;
@property (nonatomic, copy) NSString * _Nullable l_userCardId;
@property (nonatomic, copy) NSString * _Nullable lastVerifiedAtDateTime;
@property (nonatomic, copy) NSString * _Nullable minCardVersion;
@property (nonatomic, copy) NSString * _Nullable minimalVerificatonHours;
@property (nonatomic, copy) NSString * _Nullable navigateDismiss;
@property (nonatomic, copy) NSString * _Nullable nextAvailable;
@property (nonatomic, copy) NSString * _Nullable onCardTap;
@property (nonatomic, copy) NSString * _Nullable onClickAction1;
@property (nonatomic, copy) NSString * _Nullable onClickAction2;
@property (nonatomic, copy) NSString * _Nullable priority;
@property (nonatomic, copy) NSString * _Nullable repeatAfter;
@property (nonatomic, copy) NSString * _Nullable screenNumber;
@property (nonatomic, copy) NSString * _Nullable shareImageFlag;
@property (nonatomic, copy) NSString * _Nullable showCount;
@property (nonatomic, copy) NSString * _Nullable subPriority;
@property (nonatomic, copy) NSString * _Nullable subScreenNumber;
@property (nonatomic, copy) NSString * _Nullable thisCardLinkedTo;
@property (nonatomic, copy) NSString * _Nullable userCardId;
@property (nonatomic, copy) NSString * _Nullable validationBitValue;
@property (nonatomic, copy) NSString * _Nullable validationRequired;
@property (nonatomic, copy) NSString * _Nullable visibleHours;
@end


SWIFT_CLASS_NAMED("TargetCompleteData")
@interface TargetCompleteData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface TargetCompleteData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityId;
@property (nonatomic, copy) NSString * _Nullable amount;
@property (nonatomic, copy) NSString * _Nullable commentByMe;
@property (nonatomic, copy) NSString * _Nullable commentsCount;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable discription;
@property (nonatomic, copy) NSString * _Nullable displayText;
@property (nonatomic, copy) NSString * _Nullable feedId;
@property (nonatomic, copy) NSString * _Nullable habitId;
@property (nonatomic, copy) NSString * _Nullable habitName;
@property (nonatomic, copy) NSString * _Nullable heightAspectRatio;
@property (nonatomic, copy) NSString * _Nullable imageWidth;
@property (nonatomic, copy) NSString * _Nullable isdeleted;
@property (nonatomic, copy) NSString * _Nullable l_activityId;
@property (nonatomic, copy) NSString * _Nullable likeByMe;
@property (nonatomic, copy) NSString * _Nullable likesCount;
@property (nonatomic, copy) NSString * _Nullable localImage;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable privacyType;
@property (nonatomic, copy) NSString * _Nullable source;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable targetTotal;
@property (nonatomic, copy) NSString * _Nullable targetType;
@property (nonatomic, copy) NSString * _Nullable unit;
@property (nonatomic, copy) NSString * _Nullable urlImage;
@property (nonatomic, copy) NSString * _Nullable userId;
@end


SWIFT_CLASS("_TtC8GOQiiSDK13TrackerRouter")
@interface TrackerRouter : NSObject
+ (void)fetchUserInfo:(NSString * _Nonnull)methodEndpoint mobile:(NSString * _Nonnull)mobile and:(NSString * _Nonnull)encUserId completion:(void (^ _Nonnull)(NSDictionary * _Nullable, NSError * _Nullable))completion;
+ (void)sendTokenToServer:(NSString * _Nonnull)methodEndpoint withParam:(NSDictionary * _Nonnull)withParam completion:(void (^ _Nonnull)(NSDictionary * _Nullable, NSError * _Nullable))completion;
+ (void)postGlucoseData:(NSString * _Nonnull)methodEndpoint param:(NSString * _Nonnull)param completion:(void (^ _Nonnull)(NSDictionary * _Nullable, NSError * _Nullable))completion;
+ (void)unlinkGlucoMeter:(NSString * _Nonnull)apiNameStr glucoUUID:(NSString * _Nonnull)glucoUUID completion:(void (^ _Nonnull)(NSDictionary * _Nullable, NSError * _Nullable))completion;
+ (void)disconnect:(NSString * _Nonnull)methodEndpoint completion:(void (^ _Nonnull)(NSDictionary * _Nullable, NSError * _Nullable))completion;
+ (void)fetchAppList:(NSString * _Nonnull)keyword forFlow:(NSString * _Nonnull)flow forApplication:(NSString * _Nonnull)application completion:(void (^ _Nonnull)(NSDictionary * _Nullable, NSError * _Nullable))completion;
+ (void)getRequestWithoutSSL:(NSString * _Nonnull)methodEndpoint completion:(void (^ _Nonnull)(NSDictionary * _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end





SWIFT_CLASS("_TtC8GOQiiSDK24UploadFileS3BucketHelper")
@interface UploadFileS3BucketHelper : NSObject
- (void)sendRequest:(NSArray * _Nonnull)filePaths :(NSString * _Nonnull)fileQuantity :(NSString * _Nonnull)fileType :(NSString * _Nonnull)moduleType :(BOOL)isDelete completion:(void (^ _Nonnull)(CompletionResultType))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("UserHabitCheckinData")
@interface UserHabitCheckinData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface UserHabitCheckinData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable checkinId;
@property (nonatomic, copy) NSString * _Nullable cumulativecheckins;
@property (nonatomic, copy) NSString * _Nullable cumulativecheckinsForNotDone;
@property (nonatomic, copy) NSString * _Nullable current_streak;
@property (nonatomic, copy) NSString * _Nullable followed_days;
@property (nonatomic, copy) NSString * _Nullable habitId;
@property (nonatomic, copy) NSString * _Nullable longest_streak;
@property (nonatomic, copy) NSString * _Nullable month;
@property (nonatomic, copy) NSString * _Nullable reminderValue;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable total_days;
@property (nonatomic, copy) NSString * _Nullable year;
@end


SWIFT_CLASS_NAMED("UserHabitsData")
@interface UserHabitsData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface UserHabitsData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable category;
@property (nonatomic, copy) NSString * _Nullable current_streak;
@property (nonatomic, copy) NSString * _Nullable endDate;
@property (nonatomic, copy) NSString * _Nullable followed_days;
@property (nonatomic, copy) NSString * _Nullable followerCount;
@property (nonatomic, copy) NSString * _Nullable habitDescription;
@property (nonatomic, copy) NSString * _Nullable habitId;
@property (nonatomic, copy) NSString * _Nullable habitIdApi;
@property (nonatomic, copy) NSString * _Nullable habitLink;
@property (nonatomic, copy) NSString * _Nullable habitTitle;
@property (nonatomic, copy) NSString * _Nullable lastUpdatedTime;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable longest_streak;
@property (nonatomic, copy) NSString * _Nullable progressStatus;
@property (nonatomic) BOOL showDiscussionTab;
@property (nonatomic) BOOL showFollowersCard;
@property (nonatomic, copy) NSString * _Nullable sortId;
@property (nonatomic, copy) NSString * _Nullable startDate;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable total_days;
@end


SWIFT_CLASS_NAMED("UserTargetData")
@interface UserTargetData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface UserTargetData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable l_targetId;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable targetId;
@property (nonatomic, copy) NSString * _Nullable userCaloriesTarget;
@property (nonatomic, copy) NSString * _Nullable userId;
@property (nonatomic, copy) NSString * _Nullable userSkipTarget;
@property (nonatomic, copy) NSString * _Nullable userSleepTarget;
@property (nonatomic, copy) NSString * _Nullable userStepsTarget;
@property (nonatomic, copy) NSString * _Nullable userWaterTarget;
@property (nonatomic, copy) NSString * _Nullable userWeightTarget;
@end


SWIFT_CLASS_NAMED("WaterLogData")
@interface WaterLogData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface WaterLogData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityText;
@property (nonatomic, copy) NSString * _Nullable amount;
@property (nonatomic, copy) NSString * _Nullable comment;
@property (nonatomic, copy) NSString * _Nullable commentByMe;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable heightAspectRatio;
@property (nonatomic, copy) NSString * _Nullable imageWidth;
@property (nonatomic, copy) NSString * _Nullable isdeleted;
@property (nonatomic, copy) NSString * _Nullable l_waterLogId;
@property (nonatomic, copy) NSString * _Nullable likeByMe;
@property (nonatomic, copy) NSString * _Nullable likes;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable privacyType;
@property (nonatomic, copy) NSString * _Nullable quantity;
@property (nonatomic, copy) NSString * _Nullable source;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable unit;
@property (nonatomic, copy) NSString * _Nullable userId;
@property (nonatomic, copy) NSString * _Nullable waterLogId;
@end


SWIFT_CLASS("_TtC8GOQiiSDK5WebVC")
@interface WebVC : UIViewController
@property (nonatomic, copy) NSString * _Nonnull urlToLoad;
- (void)viewDidLoad;
- (void)loadWebView;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class WKWebView;
@class WKWebViewConfiguration;
@class WKNavigationAction;
@class WKWindowFeatures;
@class WKNavigation;
@class UIImage;

@interface WebVC (SWIFT_EXTENSION(GOQiiSDK)) <WKNavigationDelegate, WKUIDelegate>
- (WKWebView * _Nullable)webView:(WKWebView * _Nonnull)webView createWebViewWithConfiguration:(WKWebViewConfiguration * _Nonnull)configuration forNavigationAction:(WKNavigationAction * _Nonnull)navigationAction windowFeatures:(WKWindowFeatures * _Nonnull)windowFeatures SWIFT_WARN_UNUSED_RESULT;
- (void)showActivityIndicatorWithShow:(BOOL)show;
- (void)webView:(WKWebView * _Nonnull)webView didFinishNavigation:(WKNavigation * _Null_unspecified)navigation;
- (void)webView:(WKWebView * _Nonnull)webView didStartProvisionalNavigation:(WKNavigation * _Null_unspecified)navigation;
- (void)webView:(WKWebView * _Nonnull)webView didFailNavigation:(WKNavigation * _Null_unspecified)navigation withError:(NSError * _Nonnull)error;
- (void)webView:(WKWebView * _Nonnull)webView decidePolicyForNavigationAction:(WKNavigationAction * _Nonnull)navigationAction decisionHandler:(void (^ _Nonnull)(WKNavigationActionPolicy))decisionHandler;
- (void)downloadCertificateWithBase64String:(NSString * _Nonnull)base64String;
- (void)image:(UIImage * _Nonnull)image didFinishSavingWithError:(NSError * _Nullable)error contextInfo:(void const * _Nonnull)contextInfo;
- (void)showAlertWithTitle:(NSString * _Nonnull)title message:(NSString * _Nonnull)message;
@end


SWIFT_CLASS_NAMED("WeightLogData")
@interface WeightLogData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface WeightLogData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityText;
@property (nonatomic, copy) NSString * _Nullable bmi;
@property (nonatomic, copy) NSString * _Nullable bmr;
@property (nonatomic, copy) NSString * _Nullable bodyFat;
@property (nonatomic, copy) NSString * _Nullable bone;
@property (nonatomic, copy) NSString * _Nullable boneMuscle;
@property (nonatomic, copy) NSString * _Nullable change;
@property (nonatomic, copy) NSString * _Nullable comment;
@property (nonatomic) BOOL commentByMe;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic) BOOL gain;
@property (nonatomic, copy) NSString * _Nullable hip;
@property (nonatomic) BOOL is_deleted;
@property (nonatomic, copy) NSString * _Nullable l_weightLogId;
@property (nonatomic, copy) NSString * _Nullable likeByMe;
@property (nonatomic, copy) NSString * _Nullable likes;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable moisture;
@property (nonatomic, copy) NSString * _Nullable muscle;
@property (nonatomic, copy) NSString * _Nullable privacyType;
@property (nonatomic, copy) NSString * _Nullable protein;
@property (nonatomic, copy) NSString * _Nullable resistance;
@property (nonatomic, copy) NSString * _Nullable scaleData;
@property (nonatomic, copy) NSString * _Nullable skeletalMuscle;
@property (nonatomic, copy) NSString * _Nullable source;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable targetWeight;
@property (nonatomic, copy) NSString * _Nullable userId;
@property (nonatomic, copy) NSString * _Nullable visceralFat;
@property (nonatomic, copy) NSString * _Nullable waist;
@property (nonatomic, copy) NSString * _Nullable waistHipUnit;
@property (nonatomic, copy) NSString * _Nullable weight;
@property (nonatomic, copy) NSString * _Nullable weightLogId;
@property (nonatomic, copy) NSString * _Nullable weightUnit;
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 6.0.2 effective-5.10 (swiftlang-6.0.2.1.2 clang-1600.0.26.4)
#ifndef GOQIISDK_SWIFT_H
#define GOQIISDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreBluetooth;
@import CoreData;
@import CoreFoundation;
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import WebKit;
#endif

#import <GOQiiSDK/GOQiiSDK.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="GOQiiSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSData;
@class NSString;

SWIFT_CLASS("_TtC8GOQiiSDK15AJCryptoWrapper")
@interface AJCryptoWrapper : NSObject
+ (void)setupAJCrypto;
+ (NSData * _Nonnull)encryptData:(NSData * _Nonnull)clearTextData SWIFT_WARN_UNUSED_RESULT;
+ (NSData * _Nonnull)decrypWithEncData:(NSData * _Nonnull)encData SWIFT_WARN_UNUSED_RESULT;
+ (void)rsaEncrypt:(NSString * _Nonnull)publicKey;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSEntityDescription;
@class NSManagedObjectContext;

SWIFT_CLASS_NAMED("AppNotificationsData")
@interface AppNotificationsData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface AppNotificationsData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable action;
@property (nonatomic, copy) NSString * _Nullable activityCreater;
@property (nonatomic, copy) NSString * _Nullable activityId;
@property (nonatomic, copy) NSString * _Nullable category;
@property (nonatomic, copy) NSString * _Nullable clicked;
@property (nonatomic, copy) NSString * _Nullable commentBy;
@property (nonatomic, copy) NSString * _Nullable commentByImage;
@property (nonatomic, copy) NSString * _Nullable commentByName;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable l_notificationLogId;
@property (nonatomic, copy) NSString * _Nullable notificationLogId;
@property (nonatomic, copy) NSString * _Nullable redirectAction;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable subCategory;
@property (nonatomic, copy) NSString * _Nullable text;
@property (nonatomic, copy) NSString * _Nullable userId;
@property (nonatomic, copy) NSString * _Nullable userImage;
@property (nonatomic, copy) NSString * _Nullable userName;
@end


SWIFT_CLASS("_TtC8GOQiiSDK13BloodPressure")
@interface BloodPressure : NSObject
@property (nonatomic) NSInteger l_activityId;
@property (nonatomic) NSInteger bpId;
@property (nonatomic) NSInteger userId;
@property (nonatomic) NSInteger activityId;
@property (nonatomic) NSInteger systolic;
@property (nonatomic) NSInteger diastolic;
@property (nonatomic) NSInteger heartRate;
@property (nonatomic, copy) NSString * _Nullable heartRateData;
@property (nonatomic, copy) NSString * _Nullable logType;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable isDeleted;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable logDateTime;
@property (nonatomic) NSInteger ID1;
@property (nonatomic) NSInteger ID2;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("BloodPressureData")
@interface BloodPressureData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@class NSPredicate;
@class NSSortDescriptor;

@interface BloodPressureData (SWIFT_EXTENSION(GOQiiSDK))
/// Creates new BloodPressureData or Updates the existing BloodPressureData object.
/// \param dictionary Dictionary containing the BloodPressureData values
///
/// \param context Core data context
///
+ (BloodPressureData * _Nonnull)initOrUpdateWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary inContext:(NSManagedObjectContext * _Nonnull)context SWIFT_METHOD_FAMILY(none);
/// Get all the BloodPressureData stored in the context specified.
/// \param context Core data context
///
///
/// returns:
/// Optional array of BloodPressureData
+ (NSArray<BloodPressureData *> * _Nullable)getAllFromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Get BloodPressureData matching with specified predicate and sort order.
/// \param predicate Predicate to match the BloodPressureData with.
///
/// \param sortDescriptors Sorting order of BloodPressureData
///
/// \param context Core data context
///
///
/// returns:
/// Optional array of BloodPressureData
+ (NSArray<BloodPressureData *> * _Nullable)getDataWithPredicate:(NSPredicate * _Nullable)predicate sortDescriptors:(NSArray<NSSortDescriptor *> * _Nullable)sortDescriptors fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Generates BloodPressureData object from current object.
///
/// returns:
/// BloodPressureData
- (BloodPressure * _Nonnull)toBloodPressure SWIFT_WARN_UNUSED_RESULT;
+ (void)deleteAllBloodPressureData;
@end


@interface BloodPressureData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityId;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable diastolic;
@property (nonatomic, copy) NSString * _Nullable heartRate;
@property (nonatomic, copy) NSString * _Nullable heartRateData;
@property (nonatomic, copy) NSString * _Nullable id1;
@property (nonatomic, copy) NSString * _Nullable id2;
@property (nonatomic, copy) NSString * _Nullable isdeleted;
@property (nonatomic, copy) NSString * _Nullable l_activityId;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable logType;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable systolic;
@end


SWIFT_CLASS_NAMED("BodyTemperatureData")
@interface BodyTemperatureData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface BodyTemperatureData (SWIFT_EXTENSION(GOQiiSDK))
+ (BodyTemperatureData * _Nonnull)initOrUpdateWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary inContext:(NSManagedObjectContext * _Nonnull)context SWIFT_METHOD_FAMILY(none);
/// Calculates average temperature for sleep given date.
/// \param createdTime createdTime
///
/// \param startDate start date of week
///
/// \param endDate end date of week
///
/// \param context Coredata context
///
///
/// returns:
/// Average heart rate
+ (NSString * _Nullable)getAverageTemperatureForSleepLogDatesWithStartDate:(NSString * _Nonnull)startDate endDate:(NSString * _Nonnull)endDate player:(NSString * _Nonnull)player fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (void)updateStatusOldAll;
+ (void)deleteAllBodyTemperatureData;
@end


@interface BodyTemperatureData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityId;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable isdeleted;
@property (nonatomic, copy) NSString * _Nullable isSelf;
@property (nonatomic, copy) NSString * _Nullable l_activityId;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable logType;
@property (nonatomic, copy) NSString * _Nullable otherName;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable temperature;
@end


SWIFT_CLASS("_TtC8GOQiiSDK24BodyTemperatureViewModel")
@interface BodyTemperatureViewModel : NSObject
- (void)sendDataToServer;
+ (void)getJSONStringWithCompletion:(void (^ _Nonnull)(NSString * _Nonnull))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8GOQiiSDK12CacheManager")
@interface CacheManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) CacheManager * _Nonnull sharedInstance;)
+ (CacheManager * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getEncryptedString:(NSDictionary<NSString *, NSString *> * _Nonnull)dataDict SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getDecryptedString:(NSString * _Nonnull)encryptedString SWIFT_WARN_UNUSED_RESULT;
- (NSData * _Nonnull)decrypNewvalueWithEncData:(NSData * _Nonnull)encData SWIFT_WARN_UNUSED_RESULT;
- (void)removeCacheDataWithForkey:(NSString * _Nonnull)key;
- (void)removeHomeCellCacheDataForKey:(NSString * _Nonnull)key;
- (void)keyChainSetUp;
- (void)initValues SWIFT_METHOD_FAMILY(none);
- (void)setAPIsetup:(BOOL)isLoginWithStagging;
- (NSString * _Nullable)getValue:(NSString * _Nonnull)keys SWIFT_WARN_UNUSED_RESULT;
- (void)setValue:(NSString * _Nonnull)keys value:(NSString * _Nonnull)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("CauseSupportData")
@interface CauseSupportData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface CauseSupportData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityText;
@property (nonatomic, copy) NSString * _Nullable causeId;
@property (nonatomic, copy) NSString * _Nullable causeSupportId;
@property (nonatomic, copy) NSString * _Nullable comment;
@property (nonatomic, copy) NSString * _Nullable commentByMe;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable donatedKarma;
@property (nonatomic, copy) NSString * _Nullable donationText;
@property (nonatomic, copy) NSString * _Nullable feedId;
@property (nonatomic, copy) NSString * _Nullable heightAspectRatio;
@property (nonatomic, copy) NSString * _Nullable imageUrl;
@property (nonatomic, copy) NSString * _Nullable imageWidth;
@property (nonatomic, copy) NSString * _Nullable karmaId;
@property (nonatomic, copy) NSString * _Nullable likeByMe;
@property (nonatomic, copy) NSString * _Nullable likes;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable privacyType;
@end


SWIFT_CLASS_NAMED("ChatBotMessageData")
@interface ChatBotMessageData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@class NSDate;

@interface ChatBotMessageData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable answerFai;
@property (nonatomic, copy) NSString * _Nullable clanId;
@property (nonatomic) int64_t expireTimestamp;
@property (nonatomic, copy) NSString * _Nullable image;
@property (nonatomic, copy) NSString * _Nullable isBookmark;
@property (nonatomic) BOOL isDelivered;
@property (nonatomic) BOOL isFromPush;
@property (nonatomic) BOOL isInput;
@property (nonatomic, copy) NSString * _Nullable isLike;
@property (nonatomic, copy) NSString * _Nullable itemType;
@property (nonatomic, copy) NSString * _Nullable jsonData;
@property (nonatomic, copy) NSDate * _Nullable localTimestamp;
@property (nonatomic, copy) NSString * _Nullable message;
@property (nonatomic) int64_t messageId;
@property (nonatomic, copy) NSString * _Nullable messageTimestamp;
@property (nonatomic, copy) NSString * _Nullable senderType;
@property (nonatomic, copy) NSString * _Nullable status;
@end


SWIFT_CLASS_NAMED("ChatMessageData")
@interface ChatMessageData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@class ChatUserData;

@interface ChatMessageData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSDate * _Nullable id;
@property (nonatomic, copy) NSString * _Nullable image;
@property (nonatomic) BOOL isDelivered;
@property (nonatomic) BOOL isLiked;
@property (nonatomic, copy) NSString * _Nullable message;
@property (nonatomic, copy) NSString * _Nullable messageStatus;
@property (nonatomic, copy) NSString * _Nullable mqttId;
@property (nonatomic, copy) NSString * _Nullable reaction;
@property (nonatomic, copy) NSString * _Nullable referenceMessage;
@property (nonatomic, copy) NSString * _Nullable senderId;
@property (nonatomic, copy) NSString * _Nullable senderName;
@property (nonatomic, copy) NSString * _Nullable type;
@property (nonatomic, strong, getter=friend, setter=setFriend:) ChatUserData * _Nullable friend_;
@end


SWIFT_CLASS_NAMED("ChatUserData")
@interface ChatUserData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@class NSSet;

@interface ChatUserData (SWIFT_EXTENSION(GOQiiSDK))
- (void)addMessagesObject:(ChatMessageData * _Nonnull)value;
- (void)removeMessagesObject:(ChatMessageData * _Nonnull)value;
- (void)addMessages:(NSSet * _Nonnull)values;
- (void)removeMessages:(NSSet * _Nonnull)values;
@end


@interface ChatUserData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable authId;
@property (nonatomic, copy) NSString * _Nullable authPass;
@property (nonatomic, copy) NSString * _Nullable clanId;
@property (nonatomic, copy) NSString * _Nullable clanName;
@property (nonatomic, copy) NSString * _Nullable id;
@property (nonatomic, copy) NSString * _Nullable imageUrl;
@property (nonatomic, copy) NSString * _Nullable lastMessageSenderId;
@property (nonatomic, copy) NSString * _Nullable lastMessageText;
@property (nonatomic, copy) NSString * _Nullable lastMessageType;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic) int64_t newChatCount;
@property (nonatomic, copy) NSDate * _Nullable time;
@property (nonatomic, copy) NSString * _Nullable type;
@property (nonatomic, strong) ChatMessageData * _Nullable lastMessage;
@property (nonatomic, strong) NSSet * _Nullable messages;
@end


SWIFT_CLASS_NAMED("CoachChatBookmarkData")
@interface CoachChatBookmarkData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface CoachChatBookmarkData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable bookmarkImage;
@property (nonatomic, copy) NSString * _Nullable bookmarkLocalId;
@property (nonatomic, copy) NSString * _Nullable bookmarkName;
@property (nonatomic, copy) NSString * _Nullable bookmarkServerId;
@property (nonatomic, copy) NSString * _Nullable bookmarkText;
@property (nonatomic, copy) NSString * _Nullable bookmarkType;
@property (nonatomic, copy) NSString * _Nullable coachName;
@property (nonatomic, copy) NSString * _Nullable conversationId;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable isBookmarkDeleted;
@property (nonatomic, copy) NSString * _Nullable isExpert;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable updatedTime;
@property (nonatomic, copy) NSString * _Nullable userId;
@end


SWIFT_CLASS_NAMED("CoachChatHistoryData")
@interface CoachChatHistoryData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface CoachChatHistoryData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable cardAction;
@property (nonatomic, copy) NSString * _Nullable cardDescription;
@property (nonatomic, copy) NSString * _Nullable cardText;
@property (nonatomic, copy) NSString * _Nullable coachId;
@property (nonatomic, copy) NSString * _Nullable coachImage;
@property (nonatomic, copy) NSString * _Nullable coachName;
@property (nonatomic, copy) NSString * _Nullable conversationId;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable delay;
@property (nonatomic, copy) NSString * _Nullable expertId;
@property (nonatomic, copy) NSString * _Nullable expertImage;
@property (nonatomic, copy) NSString * _Nullable expertName;
@property (nonatomic, copy) NSString * _Nullable flagged;
@property (nonatomic, copy) NSString * _Nullable image;
@property (nonatomic, copy) NSString * _Nullable isBookMarked;
@property (nonatomic, copy) NSString * _Nullable isLiked;
@property (nonatomic, copy) NSString * _Nullable localId;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable message;
@property (nonatomic, copy) NSString * _Nullable messageType;
@property (nonatomic, copy) NSString * _Nullable repliedTime;
@property (nonatomic, copy) NSString * _Nullable screenNumber;
@property (nonatomic, copy) NSString * _Nullable sender;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable subScreenNumber;
@property (nonatomic, copy) NSString * _Nullable text;
@property (nonatomic, copy) NSString * _Nullable time;
@property (nonatomic, copy) NSString * _Nullable timeV2;
@property (nonatomic, copy) NSString * _Nullable type;
@property (nonatomic, copy) NSString * _Nullable userId;
@end


SWIFT_CLASS_NAMED("CoachChatLikeData")
@interface CoachChatLikeData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface CoachChatLikeData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable chatLikeServerId;
@property (nonatomic, copy) NSString * _Nullable conversationId;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable isChatLiked;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable userId;
@end


SWIFT_CLASS_NAMED("CoachUserDetailData")
@interface CoachUserDetailData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface CoachUserDetailData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable id;
@property (nonatomic, copy) NSString * _Nullable image;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable type;
@end

@class NSPersistentContainer;

/// Core Data Manager
/// Responsible for managing Coredata contexts and persistentContainer.
SWIFT_CLASS("_TtC8GOQiiSDK15CoreDataManager") SWIFT_AVAILABILITY(ios,introduced=10.0)
@interface CoreDataManager : NSObject
/// Shared instance of the class
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) CoreDataManager * _Nonnull shared;)
+ (CoreDataManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
/// Main/View Context, which runs on background thread.
@property (nonatomic, readonly, strong) NSManagedObjectContext * _Nonnull background;
@property (nonatomic, strong) NSManagedObjectContext * _Nonnull parentContext;
@property (nonatomic, strong) NSManagedObjectContext * _Nonnull main;
- (int64_t)getAutoIncremenet SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// /        let url = FileManager.default.urls(for: .applicationSupportDirectory, in: .userDomainMask).last?.appendingPathComponent(“GOQiiNativeEncryotedCoreData.sqlite”).absoluteString ?? “”
/// /        // Apply encription to Coredata
/// /        var cOpts : [String:Any] = [:]
/// /        if let passphraseKey = EncryptedStore.optionPassphraseKey(), let fileManager = EncryptedStore.optionFileManager(), let databaseLocation = EncryptedStore.optionDatabaseLocation() ,let defaultFileManager = EncryptedStoreFileManager.default(){
/// /            cOpts[passphraseKey] = “ADLyKNl2OuJmjPv5A5wweLEeqxWplzcD”
/// /            cOpts[fileManager] = defaultFileManager
/// /            cOpts[databaseLocation] = url
/// /        }
/// /
/// /        do {
/// /            let desc = try EncryptedStore.makeDescription(options: cOpts, configuration: nil)
/// /            container.persistentStoreDescriptions = [desc]
/// /        } catch {
/// /            //print2(“Error while encripting Coredata”)
/// /        }
@property (nonatomic, strong) NSPersistentContainer * _Nonnull persistentContainer;
/// <#Description#>
/// \param context <#context description#>
///
- (void)saveContext:(NSManagedObjectContext * _Nullable)context;
@end


SWIFT_CLASS_NAMED("CumulativeMonthWise")
@interface CumulativeMonthWise : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface CumulativeMonthWise (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityCumulativeCount;
@property (nonatomic, copy) NSString * _Nullable checkinId;
@property (nonatomic, copy) NSString * _Nullable habitCumulativeCount;
@property (nonatomic, copy) NSString * _Nullable month;
@property (nonatomic, copy) NSString * _Nullable year;
@end


SWIFT_CLASS_NAMED("DailyDeviceActivityData")
@interface DailyDeviceActivityData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@class DailyActivity;

@interface DailyDeviceActivityData (SWIFT_EXTENSION(GOQiiSDK))
/// Creates new DailyDeviceActivityData or Updates the existing DailyDeviceActivityData object.
/// \param dictionary Dictionary containing the DailyDeviceActivityData values
///
/// \param context Core data context
///
+ (DailyDeviceActivityData * _Nonnull)initOrUpdateWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary inContext:(NSManagedObjectContext * _Nonnull)context SWIFT_METHOD_FAMILY(none);
/// Map data values to the object.
/// \param dictionary Dictionary containing the values.
///
- (void)mapValuesFromDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary;
/// Get all the DailyDeviceActivityData stored in the context specified.
/// \param context Core data context
///
///
/// returns:
/// Optional array of DailyDeviceActivityData
+ (NSArray<DailyDeviceActivityData *> * _Nullable)getAllFromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Get DailyDeviceActivityData matching with specified predicate and sort order.
/// \param predicate Predicate to match the DailyDeviceActivityData with.
///
/// \param sortDescriptors Sorting order of DailyDeviceActivityData
///
/// \param context Core data context
///
///
/// returns:
/// Optional array of DailyDeviceActivityData
+ (NSArray<DailyDeviceActivityData *> * _Nullable)getDataWithPredicate:(NSPredicate * _Nullable)predicate sortDescriptors:(NSArray<NSSortDescriptor *> * _Nullable)sortDescriptors fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<DailyDeviceActivityData *> * _Nullable)getDataWithLimitWithPredicate:(NSPredicate * _Nullable)predicate sortDescriptors:(NSSortDescriptor * _Nullable)sortDescriptors limits:(NSInteger)limits fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (DailyDeviceActivityData * _Nullable)getSingleDataWithPredicate:(NSPredicate * _Nullable)predicate inContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (DailyDeviceActivityData * _Nullable)getRecentDailyDeviceDataByLogDateFromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Get sum totalSteps with matching <code>totalSteps</code>.
/// \param weightLogId totalSteps
///
/// \param context Coredata context
///
///
/// returns:
/// Array containing min and max heart rate as String, respectively, i.e. [sum totalSteps]
+ (NSDictionary<NSString *, id> * _Nullable)getSumTotalStepsWithLogdate:(NSString * _Nonnull)firstDate secondDate:(NSString * _Nonnull)secondDate expressionName:(NSString * _Nonnull)expressionName expressionName2:(NSString * _Nonnull)expressionName2 expressionName3:(NSString * _Nonnull)expressionName3 fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// <#Description#>
/// \param context <#context description#>
///
+ (void)deleteWithPredicate:(NSPredicate * _Nullable)predicate fromContext:(NSManagedObjectContext * _Nonnull)context;
+ (NSDictionary * _Nonnull)convertDailyDeviceActivityToDict:(DailyActivity * _Nonnull)data SWIFT_WARN_UNUSED_RESULT;
+ (NSDictionary * _Nonnull)convertDailyDeviceActivityToDictForAppleHealth:(DailyActivity * _Nonnull)data SWIFT_WARN_UNUSED_RESULT;
/// Generates DailyActivity object from current object.
///
/// returns:
/// DailyActivity
- (DailyActivity * _Nonnull)toDailyActivity SWIFT_WARN_UNUSED_RESULT;
+ (void)deleteAllDailyDeviceActivityData;
@end


@interface DailyDeviceActivityData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable commentByMe;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable cumulativeSteps;
@property (nonatomic, copy) NSString * _Nullable dailyActivityId;
@property (nonatomic, copy) NSString * _Nullable healthKitSteps;
@property (nonatomic, copy) NSString * _Nullable karmaPoint;
@property (nonatomic, copy) NSString * _Nullable l_dailyDeviceActivityId;
@property (nonatomic, copy) NSString * _Nullable likeByMe;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable otherSteps;
@property (nonatomic, copy) NSString * _Nullable privacyType;
@property (nonatomic, copy) NSString * _Nullable source;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable sum96stepsv2;
@property (nonatomic, copy) NSString * _Nullable sum96stepsv3;
@property (nonatomic, copy) NSString * _Nullable totalActiveTime;
@property (nonatomic, copy) NSString * _Nullable totalCalories;
@property (nonatomic, copy) NSString * _Nullable totalDistance;
@property (nonatomic, copy) NSString * _Nullable totalSteps;
@property (nonatomic, copy) NSString * _Nullable type;
@property (nonatomic, copy) NSString * _Nullable userId;
@end


SWIFT_CLASS_NAMED("DailySkipActivityData")
@interface DailySkipActivityData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface DailySkipActivityData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityTime;
@property (nonatomic, copy) NSString * _Nullable dailySkipActivityId;
@property (nonatomic, copy) NSString * _Nullable l_dailySkipActivityId;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable logDateTime;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable totalCalories;
@property (nonatomic, copy) NSString * _Nullable totalSkip;
@property (nonatomic, copy) NSString * _Nullable totalSpeed;
@end

@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC8GOQiiSDK6DemoVC")
@interface DemoVC : UIViewController
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("DetailActivityData")
@interface DetailActivityData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface DetailActivityData (SWIFT_EXTENSION(GOQiiSDK))
/// Creates new DetailActivityData or Updates the existing DetailActivityData object.
/// \param dictionary Dictionary containing the DetailActivityData values
///
/// \param context Core data context
///
+ (DetailActivityData * _Nonnull)initOrUpdateWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary inContext:(NSManagedObjectContext * _Nonnull)context SWIFT_METHOD_FAMILY(none);
/// Calculates sum of steps for given ‘logDate’.
/// \param logDate logDate
///
/// \param context Coredata context
///
///
/// returns:
/// Sum of steps
+ (NSString * _Nullable)getSumOfStepsForLogDate:(NSString * _Nonnull)logDate fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Fetches all data where logEndDate is between start and end date specified.
/// \param startDate startDate
///
/// \param endDate endDate
///
/// \param context Coredata context
///
///
/// returns:
/// Array of DetailActivityData
+ (NSArray<DetailActivityData *> * _Nullable)getAllWithStartDate:(NSString * _Nonnull)startDate endDate:(NSString * _Nonnull)endDate fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
@end


@interface DetailActivityData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityId;
@property (nonatomic, copy) NSString * _Nullable activityType;
@property (nonatomic, copy) NSString * _Nullable calories;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable descriptionString;
@property (nonatomic, copy) NSString * _Nullable distance;
@property (nonatomic, copy) NSString * _Nullable id1;
@property (nonatomic, copy) NSString * _Nullable id2;
@property (nonatomic, copy) NSString * _Nullable l_activityId;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable logDateTime;
@property (nonatomic, copy) NSString * _Nullable logEndTime;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable steps;
@end


SWIFT_CLASS_NAMED("DeviceActivityData")
@interface DeviceActivityData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@class NSNumber;

@interface DeviceActivityData (SWIFT_EXTENSION(GOQiiSDK))
/// Creates new DeviceActivityData or Updates the existing DeviceActivityData object.
/// \param dictionary Dictionary containing the DeviceActivityData values
///
/// \param context Core data context
///
+ (DeviceActivityData * _Nonnull)initOrUpdateWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary inContext:(NSManagedObjectContext * _Nonnull)context SWIFT_METHOD_FAMILY(none);
/// Map data values to the object.
/// \param dictionary Dictionary containing the values.
///
- (void)mapValuesFromDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary;
/// Get all the DeviceActivityData stored in the context specified.
/// \param context Core data context
///
///
/// returns:
/// Optional array of DeviceActivityData
+ (NSArray<DeviceActivityData *> * _Nullable)getAllFromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Get DeviceActivityData matching with specified predicate and sort order.
/// \param predicate Predicate to match the DeviceActivityData with.
///
/// \param sortDescriptors Sorting order of DeviceActivityData
///
/// \param context Core data context
///
///
/// returns:
/// Optional array of DeviceActivityData
+ (NSArray<DeviceActivityData *> * _Nullable)getDataWithPredicate:(NSPredicate * _Nullable)predicate sortDescriptors:(NSArray<NSSortDescriptor *> * _Nullable)sortDescriptors fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (NSNumber * _Nullable)getDataCountWithPredicate:(NSPredicate * _Nullable)predicate fromCotext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<DeviceActivityData *> * _Nullable)getDataWithLimitWithPredicate:(NSPredicate * _Nullable)predicate sortDescriptors:(NSSortDescriptor * _Nullable)sortDescriptors limits:(NSInteger)limits fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (DeviceActivityData * _Nullable)getSingleDataWithPredicate:(NSPredicate * _Nullable)predicate inContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (DeviceActivityData * _Nullable)getRecentDailyDeviceDataByLogDateFromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Get Avg Device Data  with matching <code>expression</code>.
/// \param expressionName String
///
/// \param context Coredata context
///
///
/// returns:
/// String
+ (NSDictionary<NSString *, id> * _Nullable)getAvgSleepDeviceDataWithPredicate:(NSPredicate * _Nullable)predicate expressionName:(NSString * _Nonnull)expressionName fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Get sum totalSteps with matching <code>totalSteps</code>.
/// \param weightLogId totalSteps
///
/// \param context Coredata context
///
///
/// returns:
/// Array containing min and max heart rate as String, respectively, i.e. [sum totalSteps]
+ (NSDictionary<NSString *, id> * _Nullable)getSumTotalDeviceDataWithPredicate:(NSPredicate * _Nullable)predicate expressionName:(NSString * _Nonnull)expressionName expressionName2:(NSString * _Nonnull)expressionName2 expressionName3:(NSString * _Nonnull)expressionName3 expressionName4:(NSString * _Nonnull)expressionName4 fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (NSDictionary<NSString *, id> * _Nullable)getDistinctDataWithPredicate:(NSPredicate * _Nullable)predicate expressionName:(NSString * _Nonnull)expressionName fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (NSDictionary<NSString *, id> * _Nullable)getMaxDataWithPredicate:(NSPredicate * _Nullable)predicate expressionName:(NSString * _Nonnull)expressionName fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (NSDictionary<NSString *, id> * _Nullable)getMinDataWithPredicate:(NSPredicate * _Nullable)predicate expressionName:(NSString * _Nonnull)expressionName fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (NSDictionary<NSString *, id> * _Nullable)getMaxMinDataWithPredicate:(NSPredicate * _Nullable)predicate expressionName:(NSString * _Nonnull)expressionName expressionName2:(NSString * _Nonnull)expressionName2 fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// <#Description#>
/// \param context <#context description#>
///
+ (void)deleteWithPredicate:(NSPredicate * _Nullable)predicate fromContext:(NSManagedObjectContext * _Nonnull)context;
+ (void)deleteAllRecords;
+ (NSDictionary<NSString *, id> * _Nullable)getdistinctDeviceData:(NSString * _Nonnull)fromDate fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (void)updateStatusAllWithStatus:(NSString * _Nonnull)status logDate:(NSString * _Nonnull)logDate fromContext:(NSManagedObjectContext * _Nonnull)context;
@end


@interface DeviceActivityData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityId;
@property (nonatomic, copy) NSString * _Nullable activityType;
@property (nonatomic, copy) NSString * _Nullable almostAwake;
@property (nonatomic, copy) NSString * _Nullable calories;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable deepSleep;
@property (nonatomic, copy) NSString * _Nullable discription;
@property (nonatomic, copy) NSString * _Nullable distance;
@property (nonatomic, copy) NSString * _Nullable duration;
@property (nonatomic, copy) NSString * _Nullable endTime;
@property (nonatomic, copy) NSString * _Nullable l_activityId;
@property (nonatomic, copy) NSString * _Nullable lightSleep;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable month;
@property (nonatomic, copy) NSString * _Nullable offset;
@property (nonatomic, copy) NSString * _Nullable remSleep;
@property (nonatomic, copy) NSString * _Nullable s1;
@property (nonatomic, copy) NSString * _Nullable s2;
@property (nonatomic, copy) NSString * _Nullable s3;
@property (nonatomic, copy) NSString * _Nullable s4;
@property (nonatomic, copy) NSString * _Nullable s5;
@property (nonatomic, copy) NSString * _Nullable s6;
@property (nonatomic, copy) NSString * _Nullable s7;
@property (nonatomic, copy) NSString * _Nullable s8;
@property (nonatomic, copy) NSString * _Nullable startTime;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable steps;
@property (nonatomic, copy) NSString * _Nullable userId;
@property (nonatomic, copy) NSString * _Nullable year;
@end


SWIFT_CLASS_NAMED("ECGData")
@interface ECGData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface ECGData (SWIFT_EXTENSION(GOQiiSDK))
/// Creates new ECGData or Updates the existing ECGData object.
/// \param dictionary Dictionary containing the ECGData values
///
/// \param context Core data context
///
+ (ECGData * _Nonnull)initOrUpdateWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary inContext:(NSManagedObjectContext * _Nonnull)context SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
/// Check  ECGData already present.
/// \param dictionary Dictionary containing the ECGData values
///
/// \param context Core data context
///
+ (BOOL)isECGDataExistsWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary inContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Map data values to the object.
/// \param dictionary Dictionary containing the values.
///
- (void)mapValuesFromDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary;
/// Get all the ECGData stored in the context specified.
/// \param context Core data context
///
///
/// returns:
/// Optional array of ECGData
+ (NSArray<ECGData *> * _Nullable)getAllFromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Get ECGData matching with specified predicate and sort order.
/// \param predicate Predicate to match the ECGData with.
///
/// \param sortDescriptors Sorting order of ECGData
///
/// \param context Core data context
///
///
/// returns:
/// Optional array of ECGData
+ (NSArray<ECGData *> * _Nullable)getDataWithPredicate:(NSPredicate * _Nullable)predicate sortDescriptors:(NSArray<NSSortDescriptor *> * _Nullable)sortDescriptors fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (void)deleteAllECGData;
@end


@interface ECGData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable data;
@property (nonatomic, copy) NSString * _Nullable ecgId;
@property (nonatomic, copy) NSString * _Nullable fullImage;
@property (nonatomic, copy) NSString * _Nullable hrv;
@property (nonatomic, copy) NSString * _Nullable l_ecgId;
@property (nonatomic, copy) NSString * _Nullable logDateTime;
@property (nonatomic, copy) NSString * _Nullable mean;
@property (nonatomic, copy) NSString * _Nullable pdfLink;
@property (nonatomic, copy) NSString * _Nullable pr;
@property (nonatomic, copy) NSString * _Nullable qrs;
@property (nonatomic, copy) NSString * _Nullable qt;
@property (nonatomic, copy) NSString * _Nullable qtc;
@property (nonatomic, copy) NSString * _Nullable recordingTime;
@property (nonatomic, copy) NSString * _Nullable report_result;
@property (nonatomic, copy) NSString * _Nullable report_summary;
@property (nonatomic, copy) NSString * _Nullable rmssd;
@property (nonatomic, copy) NSString * _Nullable sdnn;
@property (nonatomic, copy) NSString * _Nullable sdsd;
@property (nonatomic, copy) NSString * _Nullable slotNo;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable thumbnailImage;
@end


SWIFT_CLASS("_TtC8GOQiiSDK18EndPointAPIManager")
@interface EndPointAPIManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) EndPointAPIManager * _Nonnull shared;)
+ (EndPointAPIManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)mapEndpointsWithData:(NSDictionary * _Nonnull)data;
- (void)saveEndPointData:(NSDictionary * _Nonnull)data;
- (void)loadCacheEndPoint;
@end


SWIFT_CLASS_NAMED("FastTrackData")
@interface FastTrackData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface FastTrackData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable durationText;
@property (nonatomic, copy) NSDate * _Nullable endDate;
@property (nonatomic, copy) NSString * _Nullable fastTrackId;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSDate * _Nullable startDate;
@property (nonatomic, copy) NSString * _Nullable status;
@end


SWIFT_CLASS_NAMED("FeedActivityData")
@interface FeedActivityData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface FeedActivityData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityId;
@property (nonatomic, copy) NSString * _Nullable activityText;
@property (nonatomic, copy) NSString * _Nullable commentByMe;
@property (nonatomic, copy) NSString * _Nullable commentsCount;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable donationText;
@property (nonatomic, copy) NSString * _Nullable feedId;
@property (nonatomic, copy) NSString * _Nullable feedType;
@property (nonatomic, copy) NSString * _Nullable heightAspectRatio;
@property (nonatomic, copy) NSString * _Nullable imageUrl;
@property (nonatomic, copy) NSString * _Nullable imageWidth;
@property (nonatomic, copy) NSString * _Nullable l_activityId;
@property (nonatomic, copy) NSString * _Nullable likeByMe;
@property (nonatomic, copy) NSString * _Nullable likesCount;
@property (nonatomic, copy) NSString * _Nullable localActivityImage;
@property (nonatomic, copy) NSString * _Nullable localFoodImage;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable privacyType;
@property (nonatomic, copy) NSString * _Nullable serverFeedId;
@property (nonatomic, copy) NSString * _Nullable source;
@property (nonatomic, copy) NSString * _Nullable status;
@end


SWIFT_CLASS_NAMED("FoodLogData")
@interface FoodLogData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface FoodLogData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityText;
@property (nonatomic, copy) NSString * _Nullable amount;
@property (nonatomic, copy) NSString * _Nullable calories;
@property (nonatomic, copy) NSString * _Nullable comment;
@property (nonatomic, copy) NSString * _Nullable commentByMe;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable feedId;
@property (nonatomic, copy) NSString * _Nullable foodImage;
@property (nonatomic, copy) NSString * _Nullable foodLogId;
@property (nonatomic, copy) NSString * _Nullable healthAnalysis;
@property (nonatomic, copy) NSString * _Nullable heightAspectRatio;
@property (nonatomic, copy) NSString * _Nullable imageWidth;
@property (nonatomic, copy) NSString * _Nullable is_deleted;
@property (nonatomic, copy) NSString * _Nullable l_foodLogId;
@property (nonatomic, copy) NSString * _Nullable lastModifiedDate;
@property (nonatomic, copy) NSString * _Nullable likeByMe;
@property (nonatomic, copy) NSString * _Nullable likes;
@property (nonatomic, copy) NSString * _Nullable localFoodImage;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable mealType;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable nutritionData;
@property (nonatomic, copy) NSString * _Nullable privacyType;
@property (nonatomic, copy) NSString * _Nullable recognitionType;
@property (nonatomic, copy) NSString * _Nullable repeatCount;
@property (nonatomic, copy) NSString * _Nullable source;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable unit;
@property (nonatomic, copy) NSString * _Nullable userId;
@end


SWIFT_CLASS_NAMED("FrequentFoodLogData")
@interface FrequentFoodLogData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface FrequentFoodLogData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityText;
@property (nonatomic, copy) NSString * _Nullable amount;
@property (nonatomic, copy) NSString * _Nullable calories;
@property (nonatomic, copy) NSString * _Nullable comment;
@property (nonatomic, copy) NSString * _Nullable commentByMe;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable foodImage;
@property (nonatomic, copy) NSString * _Nullable foodLogId;
@property (nonatomic, copy) NSString * _Nullable healthAnalysis;
@property (nonatomic, copy) NSString * _Nullable heightAspectRatio;
@property (nonatomic, copy) NSString * _Nullable imageWidth;
@property (nonatomic, copy) NSString * _Nullable is_deleted;
@property (nonatomic, copy) NSString * _Nullable l_foodLogId;
@property (nonatomic, copy) NSString * _Nullable lastModifiedDate;
@property (nonatomic, copy) NSString * _Nullable likeByMe;
@property (nonatomic, copy) NSString * _Nullable likes;
@property (nonatomic, copy) NSString * _Nullable localFoodImage;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable mealType;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable nutritionData;
@property (nonatomic, copy) NSString * _Nullable privacyType;
@property (nonatomic, copy) NSString * _Nullable recognitionType;
@property (nonatomic, copy) NSString * _Nullable repeatCount;
@property (nonatomic, copy) NSString * _Nullable source;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable unit;
@property (nonatomic, copy) NSString * _Nullable userId;
@end


SWIFT_CLASS_NAMED("GPSBandData")
@interface GPSBandData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface GPSBandData (SWIFT_EXTENSION(GOQiiSDK))
/// Creates new GPSBandData or Updates the existing GPSBandData object.
/// \param dictionary Dictionary containing the GPSBandData values
///
/// \param context Core data context
///
+ (GPSBandData * _Nonnull)initOrUpdateWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary inContext:(NSManagedObjectContext * _Nonnull)context SWIFT_METHOD_FAMILY(none);
/// Get GPSBandData matching with specified predicate and sort order.
/// \param predicate Predicate to match the GPSBandData with.
///
/// \param sortDescriptors Sorting order of GPSBandData
///
/// \param context Core data context
///
///
/// returns:
/// Optional array of GPSBandData
+ (NSArray<GPSBandData *> * _Nullable)getDataWithPredicate:(NSPredicate * _Nullable)predicate sortDescriptors:(NSArray<NSSortDescriptor *> * _Nullable)sortDescriptors fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
@end


@interface GPSBandData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable elevation;
@property (nonatomic, copy) NSString * _Nullable l_gpsDataId;
@property (nonatomic, copy) NSString * _Nullable lat;
@property (nonatomic, copy) NSString * _Nullable lng;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable logDateTime;
@end


SWIFT_CLASS("_TtC8GOQiiSDK8GPSModel")
@interface GPSModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSURL;
@class NSURLSessionConfiguration;

SWIFT_CLASS("_TtC8GOQiiSDK16GQNetworkManager")
@interface GQNetworkManager : AFHTTPSessionManager
+ (void)initNetworkManager SWIFT_METHOD_FAMILY(none);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
+ (void)requestPostDataWithMethodEndPoint:(NSString * _Nonnull)methodEndpoint withParam:(NSDictionary * _Nonnull)param completion:(void (^ _Nonnull)(NSDictionary * _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)initWithBaseURL:(NSURL * _Nullable)url sessionConfiguration:(NSURLSessionConfiguration * _Nullable)configuration SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS_NAMED("GeneratedfeedData")
@interface GeneratedfeedData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface GeneratedfeedData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityName;
@property (nonatomic, copy) NSString * _Nullable activityText;
@property (nonatomic, copy) NSString * _Nullable additionalValue;
@property (nonatomic, copy) NSString * _Nullable comment;
@property (nonatomic, copy) NSString * _Nullable commentByMe;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable date;
@property (nonatomic, copy) NSString * _Nullable fai;
@property (nonatomic, copy) NSString * _Nullable feedId;
@property (nonatomic, copy) NSString * _Nullable feedImage;
@property (nonatomic, copy) NSString * _Nullable feedImages;
@property (nonatomic, copy) NSString * _Nullable fsn;
@property (nonatomic, copy) NSString * _Nullable fssn;
@property (nonatomic, copy) NSString * _Nullable fui;
@property (nonatomic, copy) NSString * _Nullable genericData;
@property (nonatomic, copy) NSString * _Nullable heightAspectRatio;
@property (nonatomic, copy) NSString * _Nullable imageWidth;
@property (nonatomic, copy) NSString * _Nullable isdeleted;
@property (nonatomic, copy) NSString * _Nullable jsonData;
@property (nonatomic, copy) NSString * _Nullable l_generatedFeedId;
@property (nonatomic, copy) NSString * _Nullable like;
@property (nonatomic, copy) NSString * _Nullable likeByMe;
@property (nonatomic, copy) NSString * _Nullable localFeedImage;
@property (nonatomic, copy) NSString * _Nullable logId;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable navigationType;
@property (nonatomic, copy) NSString * _Nullable privacy;
@property (nonatomic, copy) NSString * _Nullable source;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable subType;
@property (nonatomic, copy) NSString * _Nullable tagDescription;
@property (nonatomic, copy) NSString * _Nullable tagId;
@property (nonatomic, copy) NSString * _Nullable videoList;
@end


SWIFT_CLASS_NAMED("GenericPageData")
@interface GenericPageData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface GenericPageData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable l_pageId;
@property (nonatomic, copy) NSString * _Nullable pageCache;
@property (nonatomic, copy) NSString * _Nullable pageData;
@property (nonatomic, copy) NSString * _Nullable pageId;
@end

@class CBPeripheral;
@class CBCharacteristic;

SWIFT_PROTOCOL("_TtP8GOQiiSDK16GlucoBLEProtocol_")
@protocol GlucoBLEProtocol
@optional
- (void)BLEactivatedWithState:(BOOL)state;
- (void)BLEfoundPeripheralWithDevice:(CBPeripheral * _Nonnull)device rssi:(NSInteger)rssi mac:(NSString * _Nonnull)mac;
- (void)BLEreadyWithRACPcharacteristic:(CBCharacteristic * _Nonnull)RACPcharacteristic;
- (void)BLESyncCompleted;
- (void)glucoMeterConnected;
- (void)glucoMeterDisconnected;
@end

@protocol GlucoBLEManagerProtocol;

SWIFT_CLASS("_TtC8GOQiiSDK15GlucoBLEManager")
@interface GlucoBLEManager : NSObject <GlucoBLEProtocol>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) GlucoBLEManager * _Nonnull shared;)
+ (GlucoBLEManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, strong) id <GlucoBLEManagerProtocol> _Nullable glucoBleManagerDelegate;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)BLEactivatedWithState:(BOOL)state;
- (void)BLEfoundPeripheralWithDevice:(CBPeripheral * _Nonnull)device rssi:(NSInteger)rssi mac:(NSString * _Nonnull)mac;
- (void)BLEreadyWithRACPcharacteristic:(CBCharacteristic * _Nonnull)RACPcharacteristic;
- (void)BLESyncCompleted;
- (void)connectWithPeripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)glucoMeterConnected;
- (void)glucoMeterDisconnected;
- (void)startScanning;
- (void)startBLE;
- (void)connectToSavedGlucometerDevice;
- (NSString * _Nonnull)getGlucoUUID SWIFT_WARN_UNUSED_RESULT;
- (void)uploadGlucometerData:(NSArray * _Null_unspecified)results;
@end


SWIFT_PROTOCOL("_TtP8GOQiiSDK23GlucoBLEManagerProtocol_")
@protocol GlucoBLEManagerProtocol
@optional
- (void)BLEactivatedWithState:(BOOL)state;
- (void)BLEfoundPeripheralWithDevice:(CBPeripheral * _Nonnull)device rssi:(NSInteger)rssi mac:(NSString * _Nonnull)mac;
- (void)BLEreadyWithRACPcharacteristic:(CBCharacteristic * _Nonnull)RACPcharacteristic;
- (void)BLESyncCompleted;
- (void)glucoMeterConnected;
- (void)glucoMeterDisconnected;
- (void)glucoMeterData:(NSArray * _Nonnull)data;
@end



SWIFT_CLASS("_TtC8GOQiiSDK13GlucoMeterBLE")
@interface GlucoMeterBLE : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)setDelegateWithDelegate:(id <GlucoBLEProtocol> _Nonnull)delegate;
- (void)startBLE;
- (void)scan;
- (void)scanWithUUID:(NSString * _Nonnull)glucometerUUID;
- (void)connectWithPeripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)doWriteWithPeripheral:(CBPeripheral * _Nonnull)peripheral characteristic:(CBCharacteristic * _Nonnull)characteristic message:(NSArray<NSNumber *> * _Nonnull)message;
- (void)syncWithSeq:(NSInteger)seq glucometer:(CBPeripheral * _Nonnull)glucometer RACP:(CBCharacteristic * _Nonnull)RACP;
@end

@class CBService;

@interface GlucoMeterBLE (SWIFT_EXTENSION(GOQiiSDK)) <CBPeripheralDelegate>
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverServices:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverCharacteristicsForService:(CBService * _Nonnull)service error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didUpdateValueForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
@end

@class CBCentralManager;

@interface GlucoMeterBLE (SWIFT_EXTENSION(GOQiiSDK)) <CBCentralManagerDelegate>
- (void)centralManagerDidUpdateState:(CBCentralManager * _Nonnull)central;
- (void)centralManager:(CBCentralManager * _Nonnull)central didDiscoverPeripheral:(CBPeripheral * _Nonnull)peripheral advertisementData:(NSDictionary<NSString *, id> * _Nonnull)advertisementData RSSI:(NSNumber * _Nonnull)RSSI;
- (void)centralManager:(CBCentralManager * _Nonnull)central didConnectPeripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)centralManager:(CBCentralManager * _Nonnull)central didDisconnectPeripheral:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
@end


SWIFT_CLASS("_TtC8GOQiiSDK22GlucoMeterMakeSureCell")
@interface GlucoMeterMakeSureCell : UITableViewCell
- (void)awakeFromNib;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8GOQiiSDK17GlucoMeterSetupVC")
@interface GlucoMeterSetupVC : UIViewController
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UITableView;
@class NSIndexPath;

@interface GlucoMeterSetupVC (SWIFT_EXTENSION(GOQiiSDK)) <UITableViewDataSource, UITableViewDelegate>
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end


@interface GlucoMeterSetupVC (SWIFT_EXTENSION(GOQiiSDK)) <GlucoBLEManagerProtocol>
- (void)BLEactivatedWithState:(BOOL)state;
- (void)BLESyncCompleted;
- (void)BLEfoundPeripheralWithDevice:(CBPeripheral * _Nonnull)device rssi:(NSInteger)rssi mac:(NSString * _Nonnull)mac;
- (void)glucoMeterConnected;
- (void)glucoMeterDisconnected;
@end


SWIFT_CLASS_NAMED("GlucometerData")
@interface GlucometerData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface GlucometerData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable level;
@property (nonatomic, copy) NSString * _Nullable localId;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable logType;
@property (nonatomic, copy) NSString * _Nullable mealType;
@property (nonatomic, copy) NSString * _Nullable metric;
@property (nonatomic, copy) NSString * _Nullable serverId;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable subType;
@property (nonatomic, copy) NSString * _Nullable type;
@property (nonatomic, copy) NSString * _Nullable vitalType;
@end


SWIFT_CLASS_NAMED("GoActvityLogData")
@interface GoActvityLogData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface GoActvityLogData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable address;
@property (nonatomic, copy) NSString * _Nullable goqiiCash;
@property (nonatomic, copy) NSString * _Nullable intensity;
@property (nonatomic) int64_t lastCheckInTime;
@property (nonatomic, copy) NSString * _Nullable lattitude;
@property (nonatomic, copy) NSString * _Nullable longitude;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable photoReference;
@property (nonatomic, copy) NSString * _Nullable placeId;
@property (nonatomic, copy) NSString * _Nullable placeType;
@property (nonatomic) double radius;
@property (nonatomic, copy) NSString * _Nullable radiusColor;
@end


SWIFT_CLASS("_TtC8GOQiiSDK19GoqiiNetworkManager")
@interface GoqiiNetworkManager : AFHTTPSessionManager
+ (void)initNetworkManager SWIFT_METHOD_FAMILY(none);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithBaseURL:(NSURL * _Nullable)url sessionConfiguration:(NSURLSessionConfiguration * _Nullable)configuration SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS_NAMED("GoqiiRewardPointData")
@interface GoqiiRewardPointData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface GoqiiRewardPointData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable actionCode;
@property (nonatomic, copy) NSString * _Nullable animationType;
@property (nonatomic, copy) NSString * _Nullable displayType;
@property (nonatomic, copy) NSString * _Nullable eventId;
@property (nonatomic, copy) NSString * _Nullable rewardPoints;
@property (nonatomic, copy) NSString * _Nullable skipLimit;
@property (nonatomic, copy) NSString * _Nullable targetVal;
@end


SWIFT_CLASS_NAMED("HRVStressData")
@interface HRVStressData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface HRVStressData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityId;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable hrvValue;
@property (nonatomic, copy) NSString * _Nullable l_activityid;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable stressValue;
@end


SWIFT_CLASS_NAMED("HabitCheckinsData")
@interface HabitCheckinsData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface HabitCheckinsData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable checkinId;
@property (nonatomic, copy) NSString * _Nullable cumulativecheckins;
@property (nonatomic, copy) NSString * _Nullable current_streak;
@property (nonatomic, copy) NSString * _Nullable followed_days;
@property (nonatomic, copy) NSString * _Nullable habitId;
@property (nonatomic, copy) NSString * _Nullable longest_streak;
@property (nonatomic, copy) NSString * _Nullable month;
@property (nonatomic, copy) NSString * _Nullable reminderValue;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable total_days;
@property (nonatomic, copy) NSString * _Nullable year;
@end


SWIFT_CLASS_NAMED("HealthRecordData")
@interface HealthRecordData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface HealthRecordData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable attachmentId;
@property (nonatomic, copy) NSDate * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable documentFor;
@property (nonatomic, copy) NSString * _Nullable documentName;
@property (nonatomic, copy) NSString * _Nullable documentType;
@property (nonatomic, copy) NSString * _Nullable documentTypeRel;
@property (nonatomic, copy) NSString * _Nullable fileLink;
@property (nonatomic, copy) NSString * _Nullable fileName;
@property (nonatomic, copy) NSString * _Nullable localFileLink;
@property (nonatomic, copy) NSString * _Nullable recordId;
@property (nonatomic, copy) NSString * _Nullable sharedWithGoqii;
@end


SWIFT_CLASS_NAMED("HeartRateData")
@interface HeartRateData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface HeartRateData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityId;
@property (nonatomic, copy) NSString * _Nullable activityText;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable groupId;
@property (nonatomic, copy) NSString * _Nullable heartRate;
@property (nonatomic, copy) NSString * _Nullable isVisible;
@property (nonatomic, copy) NSString * _Nullable l_activityId;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable logFrom;
@property (nonatomic, copy) NSString * _Nullable source;
@property (nonatomic, copy) NSString * _Nullable status;
@end


SWIFT_AVAILABILITY(ios,introduced=10.0)
@interface HeartRateData (SWIFT_EXTENSION(GOQiiSDK))
/// Creates new HeartRateData or Updates the existing HeartRateData object.
/// \param dictionary Dictionary containing the HeartRateData values
///
/// \param context Core data context
///
+ (HeartRateData * _Nonnull)initOrUpdateWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary shouldCheckHeartRateAndGroupId:(BOOL)shouldCheckHeartRateAndGroupId inContext:(NSManagedObjectContext * _Nonnull)context SWIFT_METHOD_FAMILY(none);
/// Retrieves the Recent Heart Rate Data based on createTime.
/// \param context Coredata context
///
///
/// returns:
/// HeartRateData
+ (HeartRateData * _Nullable)getRecentHeartRateDataByCreatedTimeFromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Retrieves the Recent Heart Rate Data based on createTime.
/// \param context Coredata context
///
///
/// returns:
/// HeartRateData
+ (HeartRateData * _Nullable)getRecentHeartRateDataByCreatedTimeWithGroupId:(NSString * _Nonnull)groupId fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Retrieves the Recent Last Heart Rate Data based on logDate.
/// \param context Coredata context
///
///
/// returns:
/// HeartRateData
+ (HeartRateData * _Nullable)getLastHeartRateDataByLogDateWithLogDate:(NSString * _Nonnull)logDate fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (void)getLatestHrDataWithLogDate:(NSString * _Nonnull)logDate fromContext:(NSManagedObjectContext * _Nonnull)context completion:(void (^ _Nonnull)(HeartRateData * _Nullable))completion;
+ (void)getLatestHrDataFromContext:(NSManagedObjectContext * _Nonnull)context completion:(void (^ _Nonnull)(HeartRateData * _Nullable))completion;
/// Retrieves the Recent Heart Rate Data based on logDate.
/// \param context Coredata context
///
///
/// returns:
/// HeartRateData
+ (HeartRateData * _Nullable)getRecentHeartRateDataByLogDateFromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<HeartRateData *> * _Nullable)getAllHeartRateBetweenLogDatesWithStartDate:(NSString * _Nonnull)startDate endDate:(NSString * _Nonnull)endDate SWIFT_WARN_UNUSED_RESULT;
/// Get Min and Max heart rate with matching <code>groupId</code>.
/// \param groupId groupId
///
/// \param context Coredata context
///
///
/// returns:
/// Array containing min and max heart rate as String, respectively, i.e. [minHeartRate, maxHeartRate]
+ (NSArray<NSString *> * _Nullable)getMinMaxHeartRateForGroupId:(NSString * _Nonnull)groupId fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Get Min, Max and Avg heart rate with matching <code>groupId</code>.
/// \param groupId groupId
///
/// \param context Coredata context
///
///
/// returns:
/// Array containing min, max & avg heart rate as String, respectively, i.e. [minHeartRate, maxHeartRate, avgHeartRate]
+ (NSArray<NSString *> * _Nullable)getMinMaxAvgHeartRateForGroupId:(NSString * _Nonnull)groupId fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Get Min, Max and Avg heart rate with given date
/// \param createdTime createdTime
///
/// \param startDate start date of week
///
/// \param endDate end date of week
///
/// \param context Coredata context
///
///
/// returns:
/// Array containing min, max & avg heart rate as String, respectively, i.e. [minHeartRate, maxHeartRate, avgHeartRate]
+ (NSArray<NSString *> * _Nullable)getMinMaxAvgHRForTimeWithStartDate:(NSString * _Nonnull)startDate endDate:(NSString * _Nonnull)endDate fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Calculates average heart rate for given date.
/// \param createdTime createdTime
///
/// \param context Coredata context
///
///
/// returns:
/// Average heart rate
+ (NSString * _Nullable)getAverageHeartRateForCreatedTime:(NSString * _Nonnull)createdTime fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Calculates average heart rate for given date.
/// \param createdTime createdTime
///
/// \param context Coredata context
///
///
/// returns:
/// Average heart rate
+ (NSString * _Nullable)getAverageHeartRateWithSlotsForCreatedTime:(NSString * _Nonnull)createdTime fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Calculates average heart rate for given date.
/// \param createdTime createdTime
///
/// \param startDate start date of week
///
/// \param endDate end date of week
///
/// \param context Coredata context
///
///
/// returns:
/// Average heart rate
+ (NSString * _Nullable)getAverageHeartRateForTimeWithStartDate:(NSString * _Nonnull)startDate endDate:(NSString * _Nonnull)endDate fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Calculates average heart rate for given date.
/// \param createdTime createdTime
///
/// \param startDate start date of week
///
/// \param endDate end date of week
///
/// \param context Coredata context
///
///
/// returns:
/// Average heart rate
+ (NSString * _Nullable)getAverageHeartRateForCreatedTimeWithStartDate:(NSString * _Nonnull)startDate endDate:(NSString * _Nonnull)endDate fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Get all heart rate data grouped by groupId.
/// \param context Coredata context
///
///
/// returns:
/// Array of HeartRateData
+ (NSArray<NSDictionary<NSString *, id> *> * _Nullable)getAllGroupedByGroupIdFromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Get record count matching with the groupId.
/// \param groupId groupId
///
/// \param context Coredata context
///
///
/// returns:
/// Record Count
+ (NSString * _Nullable)getRecordCountWithGroupId:(NSString * _Nonnull)groupId fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Get new record count.
/// \param context Coredata context
///
///
/// returns:
/// Record count
+ (NSString * _Nullable)getNewRecordCountFromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Get distinct ‘groupId’s of New heart rate data records.
/// \param context Coredata context
///
///
/// returns:
/// Array of dictionary with ‘groupId’
+ (NSArray<NSDictionary<NSString *, id> *> * _Nullable)getDistinctGroupIdsOfNewRecordsFromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Update multiple heart rate data with matching predicate.
/// \param predicate Predicate
///
/// \param propertiesToUpdate Dictionary containing properties to update
///
/// \param context Coredata context
///
+ (void)updateMultipleDataWithPredicate:(NSPredicate * _Nonnull)predicate propertiesToUpdate:(NSDictionary<NSString *, NSString *> * _Nonnull)propertiesToUpdate inContext:(NSManagedObjectContext * _Nonnull)context;
/// Get HeartRateData matching with specified predicate and sort order.
/// \param predicate Predicate to match the HeartRateData with.
///
/// \param sortDescriptors Sorting order of HeartRateData
///
/// \param context Core data context
///
///
/// returns:
/// Optional array of HeartRateData
+ (NSArray<HeartRateData *> * _Nullable)getDataWithPredicate:(NSPredicate * _Nullable)predicate sortDescriptors:(NSArray<NSSortDescriptor *> * _Nullable)sortDescriptors fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (void)updateStatusOldAll;
+ (void)deleteAllHeartRateData;
@end


SWIFT_CLASS_NAMED("InsuranceRecordData")
@interface InsuranceRecordData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface InsuranceRecordData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable attachmentId;
@property (nonatomic, copy) NSDate * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable documentFor;
@property (nonatomic, copy) NSString * _Nullable documentName;
@property (nonatomic, copy) NSString * _Nullable documentType;
@property (nonatomic, copy) NSString * _Nullable expiryDate;
@property (nonatomic, copy) NSString * _Nullable fileLink;
@property (nonatomic, copy) NSString * _Nullable fileName;
@property (nonatomic, copy) NSString * _Nullable insuranceDocId;
@property (nonatomic, copy) NSString * _Nullable insuranceFrom;
@property (nonatomic, copy) NSString * _Nullable insurerBrand;
@property (nonatomic, copy) NSString * _Nullable localFileLink;
@property (nonatomic, copy) NSString * _Nullable localHealthRecordId;
@property (nonatomic, copy) NSString * _Nullable reminder;
@property (nonatomic, copy) NSString * _Nullable sharedWithGoqii;
@property (nonatomic, copy) NSString * _Nullable startDate;
@end


@protocol OmronBluetoothManagerDelegate;

SWIFT_CLASS("_TtC8GOQiiSDK21OmronBluetoothManager")
@interface OmronBluetoothManager : NSObject <CBCentralManagerDelegate, CBPeripheralDelegate>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) OmronBluetoothManager * _Nonnull sharedInstance;)
+ (OmronBluetoothManager * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, strong) id <OmronBluetoothManagerDelegate> _Nullable delegate;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)centralManagerDidUpdateState:(CBCentralManager * _Nonnull)central;
- (void)initaliseBle;
- (void)startScanning;
- (void)connectAndSync;
- (void)disconnect;
- (void)centralManager:(CBCentralManager * _Nonnull)central didDiscoverPeripheral:(CBPeripheral * _Nonnull)peripheral advertisementData:(NSDictionary<NSString *, id> * _Nonnull)advertisementData RSSI:(NSNumber * _Nonnull)RSSI;
- (void)centralManager:(CBCentralManager * _Nonnull)central didConnectPeripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)centralManager:(CBCentralManager * _Nonnull)central didDisconnectPeripheral:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverServices:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverCharacteristicsForService:(CBService * _Nonnull)service error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didUpdateValueForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
@end


SWIFT_PROTOCOL("_TtP8GOQiiSDK29OmronBluetoothManagerDelegate_")
@protocol OmronBluetoothManagerDelegate
- (void)didInitializeWithIsSuccessfully:(BOOL)isSuccessfully;
- (void)didFindDeviceWithIsSuccessfully:(BOOL)isSuccessfully;
- (void)didConnectDeviceWithIsSuccessfully:(BOOL)isSuccessfully macId:(NSString * _Nonnull)macId;
- (void)didDisconnectDeviceWithIsSuccessfully:(BOOL)isSuccessfully;
- (void)didReceiveBloodPressureData:(NSDictionary<NSString *, id> * _Nonnull)data;
@end


SWIFT_CLASS("_TtC8GOQiiSDK19OneTouchB59XManager")
@interface OneTouchB59XManager : NSObject <CBCentralManagerDelegate, CBPeripheralDelegate>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)centralManagerDidUpdateState:(CBCentralManager * _Nonnull)central;
- (void)centralManager:(CBCentralManager * _Nonnull)central didDiscoverPeripheral:(CBPeripheral * _Nonnull)peripheral advertisementData:(NSDictionary<NSString *, id> * _Nonnull)advertisementData RSSI:(NSNumber * _Nonnull)RSSI;
- (void)centralManager:(CBCentralManager * _Nonnull)central didConnectPeripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverServices:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverCharacteristicsForService:(CBService * _Nonnull)service error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didUpdateNotificationStateForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didUpdateValueForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
- (void)centralManager:(CBCentralManager * _Nonnull)central didFailToConnectPeripheral:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
- (void)centralManager:(CBCentralManager * _Nonnull)central didDisconnectPeripheral:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
- (void)doWriteWithPeripheral:(CBPeripheral * _Nonnull)peripheral characteristic:(CBCharacteristic * _Nonnull)characteristic message:(NSArray<NSNumber *> * _Nonnull)message;
- (void)syncWithSeq:(NSInteger)seq glucometer:(CBPeripheral * _Nonnull)glucometer RACP:(CBCharacteristic * _Nonnull)RACP;
@end


SWIFT_CLASS_NAMED("PaceData")
@interface PaceData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface PaceData (SWIFT_EXTENSION(GOQiiSDK))
/// Creates new PaceData or Updates the existing PaceData object.
/// \param dictionary Dictionary containing the PaceData values
///
/// \param context Core data context
///
+ (PaceData * _Nonnull)initOrUpdateWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary inContext:(NSManagedObjectContext * _Nonnull)context SWIFT_METHOD_FAMILY(none);
/// Get PaceData matching with specified predicate and sort order.
/// \param predicate Predicate to match the PaceData with.
///
/// \param sortDescriptors Sorting order of PaceData
///
/// \param context Core data context
///
///
/// returns:
/// Optional array of PaceData
+ (NSArray<PaceData *> * _Nullable)getDataWithPredicate:(NSPredicate * _Nullable)predicate sortDescriptors:(NSArray<NSSortDescriptor *> * _Nullable)sortDescriptors fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (void)deleteAllRecords;
@end


@interface PaceData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable distMode;
@property (nonatomic, copy) NSString * _Nullable kmCovered;
@property (nonatomic, copy) NSString * _Nullable lat;
@property (nonatomic, copy) NSString * _Nullable lng;
@property (nonatomic, copy) NSString * _Nullable logDateTime;
@property (nonatomic, copy) NSString * _Nullable perKmDuration;
@end


SWIFT_CLASS_NAMED("PhoneActivityData")
@interface PhoneActivityData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@class DeviceExerciseV3;

@interface PhoneActivityData (SWIFT_EXTENSION(GOQiiSDK))
/// Creates new PhoneActivityData or Updates the existing PhoneActivityData object.
/// \param dictionary Dictionary containing the PhoneActivityData values
///
/// \param context Core data context
///
+ (PhoneActivityData * _Nonnull)initOrUpdateWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary inContext:(NSManagedObjectContext * _Nonnull)context SWIFT_METHOD_FAMILY(none);
/// Creates new PhoneActivityData or Updates the existing PhoneActivityData object.
/// \param dictionary Dictionary containing the PhoneActivityData values
///
/// \param context Core data context
///
+ (PhoneActivityData * _Nonnull)saveOrUpdateWithoutDistinctCreatedTimeWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary inContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Retrieves the Phone Activity matching the specified activityId or createTime.
/// \param activityId activityId
///
/// \param createTime createTime
///
/// \param context Coredata context
///
///
/// returns:
/// PhoneActivityData
+ (PhoneActivityData * _Nullable)getPhoneActivityDataWithLocalActivityId:(NSString * _Nullable)localActivityId serverActivityId:(NSString * _Nullable)serverActivityId createTime:(NSString * _Nullable)createTime fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Map data values to the object.
/// \param dictionary Dictionary containing the values.
///
- (void)mapValuesFromDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary forUpdate:(BOOL)update;
/// Map values from DeviceExerciseV3.
/// \param deviceExercise DeviceExerciseV3
///
- (void)mapValuesFromDeviceExercise:(DeviceExerciseV3 * _Nonnull)deviceExercise;
/// Get all the PhoneActivityData stored in the context specified.
/// \param context Core data context
///
///
/// returns:
/// Optional array of PhoneActivityData
+ (NSArray<PhoneActivityData *> * _Nullable)getAllFromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Get PhoneActivityData matching with specified predicate and sort order.
/// \param predicate Predicate to match the PhoneActivityData with.
///
/// \param sortDescriptors Sorting order of PhoneActivityData
///
/// \param context Core data context
///
///
/// returns:
/// Optional array of PhoneActivityData
+ (NSArray<PhoneActivityData *> * _Nullable)getDataWithPredicate:(NSPredicate * _Nullable)predicate sortDescriptors:(NSArray<NSSortDescriptor *> * _Nullable)sortDescriptors fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Retrieves the max value of ‘activityId’ in the context
/// \param context Coredata context
///
///
/// returns:
/// max value of activityId
+ (NSString * _Nullable)getMaxActivityIdFromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Calculates sum of Duration for given ‘logDate’.
/// \param logDate logDate
///
/// \param context Coredata context
///
///
/// returns:
/// Sum of Duration
+ (NSString * _Nullable)getSumOfDurationForLogDate:(NSString * _Nonnull)logDate fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Calculates sum of Duration between given start and end ‘logDate’.
/// \param logDate logDate
///
/// \param context Coredata context
///
///
/// returns:
/// Sum of Duration
+ (NSString * _Nullable)getSumOfDurationFromStartDate:(NSString * _Nonnull)startDate toEndDate:(NSString * _Nonnull)endDate fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Calculates sum of Calories burnt for given ‘logDate’.
/// \param logDate logDate
///
/// \param context Coredata context
///
///
/// returns:
/// Sum of Calories Burnt
+ (NSString * _Nullable)getSumOfCaloriesBurntForLogDate:(NSString * _Nonnull)logDate fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Calculates sum of Calories Burnt between given start and end ‘logDate’.
/// \param logDate logDate
///
/// \param context Coredata context
///
///
/// returns:
/// Sum of Calories Burnt
+ (NSString * _Nullable)getSumOfCaloriesBurntFromStartDate:(NSString * _Nonnull)startDate toEndDate:(NSString * _Nonnull)endDate fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Get new record count.
/// \param context Coredata context
///
///
/// returns:
/// Record count
+ (NSString * _Nullable)getNewRecordCountFromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Get offline deleted record count.
/// \param context Coredata context
///
///
/// returns:
/// Record count
+ (NSString * _Nullable)getOfflineDeletedRecordCountFromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Update all PhoneActivityData with status as ‘inprogress’ to ‘new’.
/// \param context Coredata context
///
+ (void)updateStatusOfInProgressDataToNewInContext:(NSManagedObjectContext * _Nonnull)context;
/// Generates ActivityFeed object from current object.
///
/// returns:
/// ActivityFeed
/// /        if (logFrom == “play” || logFrom == “playposedetection” || logFrom == “goqiipro”) {
/// /
/// /            if let jsonDataString = self.jsonData,
/// /                let jsonData = jsonDataString.data(using: .utf8),
/// /                let jsonDataDict = try? JSONSerialization.jsonObject(with: jsonData, options: []) as? [String:Any] {
/// /                feed.fSN = String(jsonDataDict[“screenNumber”]).int32Value
/// /                feed.fSSN = String(jsonDataDict[“subScreenNumber”]).int32Value
/// /                feed.fAI = String(jsonDataDict[“additionalValue”])
/// /                feed.navigationType = String(jsonDataDict[“navigationType”]).int32Value
/// /
/// /                let additionalValueString = String(jsonDataDict[“additionalValue”])
/// /
/// /                if let additionalValueData = additionalValueString.data(using: .utf8),
/// /                    let additionalValueDataDict = try? JSONSerialization.jsonObject(with: additionalValueData, options: []) as? [String:Any] {
/// /                    feed.activityText = String(additionalValueDataDict[“activityText”])
/// /                }
/// /            }
/// /
/// /        }
+ (void)deleteDataIsDeletedFromContext:(NSManagedObjectContext * _Nonnull)context;
/// Generates PhoneActivity object from current object.
///
/// returns:
/// PhoneActivity
+ (void)getNewActivitiesWithServerImageWithCompletionHandler:(void (^ _Nonnull)(NSArray<PhoneActivityData *> * _Nullable))completionHandler;
+ (PhoneActivityData * _Nullable)getActivityWithLocalActivityId:(NSString * _Nullable)localActivityId serverActivityId:(NSString * _Nullable)serverActivityId fromContext:(NSManagedObjectContext * _Nullable)context SWIFT_WARN_UNUSED_RESULT;
+ (void)deleteAllPhoneActivityData;
@end


@interface PhoneActivityData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityId;
@property (nonatomic, copy) NSString * _Nullable activityImage;
@property (nonatomic, copy) NSString * _Nullable activityName;
@property (nonatomic, copy) NSString * _Nullable activityText;
@property (nonatomic, copy) NSString * _Nullable caloriesBurnt;
@property (nonatomic, copy) NSString * _Nullable commentsCount;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable discription;
@property (nonatomic, copy) NSString * _Nullable distance;
@property (nonatomic, copy) NSString * _Nullable duration;
@property (nonatomic, copy) NSString * _Nullable durationSec;
@property (nonatomic, copy) NSString * _Nullable endTime;
@property (nonatomic, copy) NSString * _Nullable gpsData;
@property (nonatomic, copy) NSString * _Nullable gpsDerivedData;
@property (nonatomic, copy) NSString * _Nullable heartData;
@property (nonatomic, copy) NSString * _Nullable heightAspectRatio;
@property (nonatomic, copy) NSString * _Nullable id1;
@property (nonatomic, copy) NSString * _Nullable id2;
@property (nonatomic, copy) NSString * _Nullable imageWidth;
@property (nonatomic, copy) NSString * _Nullable intensity;
@property (nonatomic) BOOL is_deleted;
@property (nonatomic) BOOL isCommentByMe;
@property (nonatomic, copy) NSString * _Nullable isLikeByMe;
@property (nonatomic, copy) NSString * _Nullable jsonData;
@property (nonatomic, copy) NSString * _Nullable l_activityId;
@property (nonatomic, copy) NSString * _Nullable likesCount;
@property (nonatomic, copy) NSString * _Nullable localActivityImage;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable logFrom;
@property (nonatomic, copy) NSString * _Nullable pointData;
@property (nonatomic, copy) NSString * _Nullable privacyType;
@property (nonatomic, copy) NSString * _Nullable shareLink;
@property (nonatomic, copy) NSString * _Nullable simplifiedData;
@property (nonatomic, copy) NSString * _Nullable source;
@property (nonatomic, copy) NSString * _Nullable startTime;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable steps;
@property (nonatomic, copy) NSString * _Nullable unit;
@property (nonatomic, copy) NSString * _Nullable userId;
@end


SWIFT_CLASS_NAMED("PlayOfflineData")
@interface PlayOfflineData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface PlayOfflineData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable analyticsItems;
@property (nonatomic, copy) NSString * _Nullable category;
@property (nonatomic, copy) NSString * _Nullable downloadedURL;
@property (nonatomic, copy) NSString * _Nullable downloadIdentifier;
@property (nonatomic, copy) NSString * _Nullable duration;
@property (nonatomic) BOOL enableHR;
@property (nonatomic, copy) NSString * _Nullable energyPointMultiplier;
@property (nonatomic) float heightAspectRatio;
@property (nonatomic) BOOL isSubsCribed;
@property (nonatomic) BOOL isVideoDownloaded;
@property (nonatomic) BOOL isVideoViewed;
@property (nonatomic, copy) NSString * _Nullable isWorkout;
@property (nonatomic, copy) NSString * _Nullable itemType;
@property (nonatomic, copy) NSString * _Nullable onTap;
@property (nonatomic) int64_t profileId;
@property (nonatomic, copy) NSString * _Nullable shareArena;
@property (nonatomic, copy) NSString * _Nullable shareOutside;
@property (nonatomic, copy) NSString * _Nullable shareText;
@property (nonatomic) BOOL showSuggestions;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable streamerImageUrl;
@property (nonatomic, copy) NSString * _Nullable streamerName;
@property (nonatomic, copy) NSString * _Nullable streamUrl;
@property (nonatomic, copy) NSString * _Nullable thumbnail;
@property (nonatomic, copy) NSString * _Nullable title;
@property (nonatomic, copy) NSString * _Nullable videoDescription;
@property (nonatomic) BOOL videoearlyexitrating;
@property (nonatomic) int64_t videoId;
@property (nonatomic) BOOL videostarrating;
@property (nonatomic, copy) NSString * _Nullable videoType;
@property (nonatomic, copy) NSString * _Nullable workoutRoutine;
@property (nonatomic, copy) NSString * _Nullable workoutType;
@end


SWIFT_CLASS("_TtC8GOQiiSDK16RNNetworkManager")
@interface RNNetworkManager : AFHTTPSessionManager
+ (void)initNetworkManager SWIFT_METHOD_FAMILY(none);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
+ (void)requestPostDataWithMethodEndPoint:(NSString * _Nonnull)methodEndpoint withParam:(NSDictionary * _Nonnull)param completion:(void (^ _Nonnull)(NSDictionary * _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)initWithBaseURL:(NSURL * _Nullable)url sessionConfiguration:(NSURLSessionConfiguration * _Nullable)configuration SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS_NAMED("RealTimeTemperatureHRData")
@interface RealTimeTemperatureHRData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface RealTimeTemperatureHRData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityId;
@property (nonatomic, copy) NSString * _Nullable calories;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable heartRate;
@property (nonatomic, copy) NSString * _Nullable l_activityid;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable steps;
@property (nonatomic, copy) NSString * _Nullable temperature;
@end


SWIFT_CLASS_NAMED("ReminderData")
@interface ReminderData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface ReminderData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityType;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable daysOfWeek;
@property (nonatomic, copy) NSString * _Nullable endDate;
@property (nonatomic, copy) NSString * _Nullable iconType;
@property (nonatomic, copy) NSString * _Nullable isdeleted;
@property (nonatomic, copy) NSString * _Nullable l_reminderId;
@property (nonatomic, copy) NSString * _Nullable notificationType;
@property (nonatomic, copy) NSString * _Nullable onStatus;
@property (nonatomic, copy) NSString * _Nullable reminderActivityId;
@property (nonatomic, copy) NSString * _Nullable reminderBy;
@property (nonatomic, copy) NSString * _Nullable reminderEndTime;
@property (nonatomic, copy) NSString * _Nullable reminderId;
@property (nonatomic, copy) NSString * _Nullable reminderOccurrences;
@property (nonatomic, copy) NSString * _Nullable reminderText;
@property (nonatomic, copy) NSString * _Nullable reminderTime;
@property (nonatomic, copy) NSString * _Nullable reminderType;
@property (nonatomic, copy) NSString * _Nullable repeatingDays;
@property (nonatomic, copy) NSString * _Nullable repeatInterval;
@property (nonatomic, copy) NSString * _Nullable startDate;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable uid;
@property (nonatomic, copy) NSString * _Nullable userId;
@end


SWIFT_CLASS("_TtC8GOQiiSDK10SDKManager")
@interface SDKManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SDKManager * _Nonnull sharedInstance;)
+ (SDKManager * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)initialize;
- (void)navigateToHome:(UIViewController * _Nonnull)vc;
@end


SWIFT_CLASS_NAMED("SPO2Data")
@interface SPO2Data : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface SPO2Data (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityId;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable l_activityid;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable spo2Value;
@property (nonatomic, copy) NSString * _Nullable status;
@end


SWIFT_AVAILABILITY(ios,introduced=10.0)
@interface SPO2Data (SWIFT_EXTENSION(GOQiiSDK))
/// Creates new SPO2Data or Updates the existing SPO2Data object.
/// \param dictionary Dictionary containing the SPO2Data values
///
/// \param context Core data context
///
+ (SPO2Data * _Nonnull)initOrUpdateWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary inContext:(NSManagedObjectContext * _Nonnull)context SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
/// Map data values to the object.
/// \param dictionary Dictionary containing the values.
///
- (void)mapValuesFromDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary;
/// Get all the SPO2Data stored in the context specified.
/// \param context Core data context
///
///
/// returns:
/// Optional array of GPSBandData
+ (NSArray<SPO2Data *> * _Nullable)getAllFromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Get SPO2Data matching with specified predicate and sort order.
/// \param predicate Predicate to match the SPO2Data with.
///
/// \param sortDescriptors Sorting order of SPO2Data
///
/// \param context Core data context
///
///
/// returns:
/// Optional array of SPO2Data
+ (NSArray<SPO2Data *> * _Nullable)getDataWithPredicate:(NSPredicate * _Nullable)predicate sortDescriptors:(NSArray<NSSortDescriptor *> * _Nullable)sortDescriptors fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)deleteDataWithPredicate:(NSPredicate * _Nullable)predicate sortDescriptors:(NSArray<NSSortDescriptor *> * _Nullable)sortDescriptors fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (void)updateDataBasedOnResponseWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary inContext:(NSManagedObjectContext * _Nonnull)context;
/// Calculates average heart rate for given date.
/// \param createdTime createdTime
///
/// \param startDate start date of week
///
/// \param endDate end date of week
///
/// \param context Coredata context
///
///
/// returns:
/// Average heart rate
+ (NSString * _Nullable)getAverageSpO2BetweenLogDatesWithStartDate:(NSString * _Nonnull)startDate endDate:(NSString * _Nonnull)endDate fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)getAverageSpO2ForLogDate:(NSString * _Nonnull)date fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (SPO2Data * _Nullable)getRecentSpO2DataWithDate:(NSString * _Nonnull)date SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<SPO2Data *> * _Nullable)getAllSpO2BetweenLogDatesWithStartDate:(NSString * _Nonnull)startDate endDate:(NSString * _Nonnull)endDate SWIFT_WARN_UNUSED_RESULT;
+ (void)updateStatusOldAll;
+ (SPO2Data * _Nullable)getLastSPO2Data SWIFT_WARN_UNUSED_RESULT;
/// Retrieves the max value of ‘createdTime’ in the context
/// \param context Coredata context
///
///
/// returns:
/// max value of logDateTime
+ (NSString * _Nullable)getMaxLogDateTimeFromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getJSONString SWIFT_WARN_UNUSED_RESULT;
+ (void)getJSONStringWithCompletion:(void (^ _Nonnull)(NSString * _Nonnull))completion;
+ (void)batchInsertsWithSpO2Values:(NSArray<NSDictionary<NSString *, id> *> * _Nonnull)SpO2Values;
+ (void)deleteAllSPO2Data;
@end


SWIFT_CLASS_NAMED("SkipDetailData")
@interface SkipDetailData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface SkipDetailData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable endlogDateTime;
@property (nonatomic, copy) NSString * _Nullable l_skipDetail_Id;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable logDateTime;
@property (nonatomic, copy) NSString * _Nullable skipdetail_Id;
@property (nonatomic, copy) NSString * _Nullable skips;
@property (nonatomic, copy) NSString * _Nullable status;
@end


SWIFT_CLASS_NAMED("SleepBandData")
@interface SleepBandData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@class DeviceSleepV3;

@interface SleepBandData (SWIFT_EXTENSION(GOQiiSDK))
/// Creates new SleepBandData or Updates the existing SleepBandData object.
/// \param dictionary Dictionary containing the SleepBandData values
///
/// \param context Core data context
///
+ (SleepBandData * _Nonnull)initOrUpdateWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary inContext:(NSManagedObjectContext * _Nonnull)context SWIFT_METHOD_FAMILY(none);
/// Map data values to the object.
/// \param dictionary Dictionary containing the values.
///
- (void)mapValuesFromDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary;
/// Get all the SleepBandData stored in the context specified.
/// \param context Core data context
///
///
/// returns:
/// Optional array of SleepBandData
+ (NSArray<SleepBandData *> * _Nullable)getAllFromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Get SleepBandData matching with specified predicate and sort order.
/// \param predicate Predicate to match the SleepBandData with.
///
/// \param sortDescriptors Sorting order of SleepBandData
///
/// \param context Core data context
///
///
/// returns:
/// Optional array of SleepBandData
+ (NSArray<SleepBandData *> * _Nullable)getDataWithPredicate:(NSPredicate * _Nullable)predicate sortDescriptors:(NSArray<NSSortDescriptor *> * _Nullable)sortDescriptors fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<SleepBandData *> * _Nullable)getDataWithLimitWithPredicate:(NSPredicate * _Nullable)predicate sortDescriptors:(NSSortDescriptor * _Nullable)sortDescriptors limits:(NSInteger)limits fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (SleepBandData * _Nullable)getSingleDataWithPredicate:(NSPredicate * _Nullable)predicate inContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (SleepBandData * _Nullable)getRecentSleepBandDataByLogDateFromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
/// Get sum totalSteps with matching <code>totalSteps</code>.
/// \param weightLogId totalSteps
///
/// \param context Coredata context
///
///
/// returns:
/// Array containing min and max heart rate as String, respectively, i.e. [sum totalSteps]
+ (NSDictionary<NSString *, id> * _Nullable)getSumTotalSleepBandDataWithPredicate:(NSPredicate * _Nullable)predicate expressionName:(NSString * _Nonnull)expressionName expressionName2:(NSString * _Nonnull)expressionName2 expressionName3:(NSString * _Nonnull)expressionName3 expressionName4:(NSString * _Nonnull)expressionName4 fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (NSDictionary<NSString *, id> * _Nullable)getDistinctDataWithPredicate:(NSPredicate * _Nullable)predicate expressionName:(NSString * _Nonnull)expressionName fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
+ (NSDictionary<NSString *, id> * _Nullable)getMaxMinDataWithPredicate:(NSPredicate * _Nullable)predicate expressionName:(NSString * _Nonnull)expressionName expressionName2:(NSString * _Nonnull)expressionName2 fromContext:(NSManagedObjectContext * _Nonnull)context SWIFT_WARN_UNUSED_RESULT;
- (DeviceSleepV3 * _Nonnull)toSleepBandActivity SWIFT_WARN_UNUSED_RESULT;
+ (NSDictionary * _Nonnull)convertSleepBandActivityToDict:(DeviceSleepV3 * _Nonnull)data SWIFT_WARN_UNUSED_RESULT;
+ (void)deleteAllSleepBandData;
@end


@interface SleepBandData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityId;
@property (nonatomic, copy) NSString * _Nullable activityType;
@property (nonatomic, copy) NSString * _Nullable almostAwake;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable deepSleep;
@property (nonatomic, copy) NSString * _Nullable descriptionCount;
@property (nonatomic, copy) NSString * _Nullable discription;
@property (nonatomic, copy) NSString * _Nullable id1;
@property (nonatomic, copy) NSString * _Nullable id2;
@property (nonatomic, copy) NSString * _Nullable l_activityId;
@property (nonatomic, copy) NSString * _Nullable lightSleep;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable logDateTime;
@property (nonatomic, copy) NSString * _Nullable logEndTime;
@property (nonatomic, copy) NSString * _Nullable s1;
@property (nonatomic, copy) NSString * _Nullable s2;
@property (nonatomic, copy) NSString * _Nullable s3;
@property (nonatomic, copy) NSString * _Nullable s4;
@property (nonatomic, copy) NSString * _Nullable s5;
@property (nonatomic, copy) NSString * _Nullable s6;
@property (nonatomic, copy) NSString * _Nullable s7;
@property (nonatomic, copy) NSString * _Nullable s8;
@property (nonatomic, copy) NSString * _Nullable status;
@end


SWIFT_CLASS_NAMED("SleepLogData")
@interface SleepLogData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface SleepLogData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityText;
@property (nonatomic, copy) NSString * _Nullable awakeTime;
@property (nonatomic, copy) NSString * _Nullable comment;
@property (nonatomic, copy) NSString * _Nullable commentByMe;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable duration;
@property (nonatomic, copy) NSString * _Nullable isdeleted;
@property (nonatomic, copy) NSString * _Nullable l_sleepLogId;
@property (nonatomic, copy) NSString * _Nullable likeByMe;
@property (nonatomic, copy) NSString * _Nullable likes;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable logType;
@property (nonatomic, copy) NSString * _Nullable minutesAsleep;
@property (nonatomic, copy) NSString * _Nullable privacyType;
@property (nonatomic, copy) NSString * _Nullable rating;
@property (nonatomic, copy) NSString * _Nullable sleepLogId;
@property (nonatomic, copy) NSString * _Nullable sleptTime;
@property (nonatomic, copy) NSString * _Nullable source;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable timeInBed;
@property (nonatomic, copy) NSString * _Nullable userId;
@end


SWIFT_CLASS_NAMED("SmartcardData")
@interface SmartcardData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface SmartcardData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable actionUrlIos;
@property (nonatomic, copy) NSString * _Nullable additionId;
@property (nonatomic, copy) NSString * _Nullable allowSocial;
@property (nonatomic, copy) NSString * _Nullable allowSwiping;
@property (nonatomic, copy) NSString * _Nullable analyticsItems;
@property (nonatomic, copy) NSString * _Nullable apiParam;
@property (nonatomic, copy) NSString * _Nullable cardActionColor1;
@property (nonatomic, copy) NSString * _Nullable cardActionColor2;
@property (nonatomic, copy) NSString * _Nullable cardActionText1;
@property (nonatomic, copy) NSString * _Nullable cardActionText2;
@property (nonatomic, copy) NSString * _Nullable cardActionType;
@property (nonatomic, copy) NSString * _Nullable cardBackgroundColor;
@property (nonatomic, copy) NSString * _Nullable cardDescription;
@property (nonatomic, copy) NSString * _Nullable cardDescriptionColor;
@property (nonatomic, copy) NSString * _Nullable cardExpiry;
@property (nonatomic, copy) NSString * _Nullable cardIconUrl;
@property (nonatomic, copy) NSString * _Nullable cardImageBackground;
@property (nonatomic, copy) NSString * _Nullable cardImageType;
@property (nonatomic, copy) NSString * _Nullable cardImageUrl;
@property (nonatomic, copy) NSString * _Nullable cardLayoutType;
@property (nonatomic, copy) NSString * _Nullable cardName;
@property (nonatomic, copy) NSString * _Nullable cardPosition;
@property (nonatomic, copy) NSString * _Nullable cardShareDescription;
@property (nonatomic, copy) NSString * _Nullable cardSubTitle;
@property (nonatomic, copy) NSString * _Nullable cardTitle;
@property (nonatomic, copy) NSString * _Nullable cardTitleColor;
@property (nonatomic, copy) NSString * _Nullable cardType;
@property (nonatomic, copy) NSString * _Nullable cardVisibility;
@property (nonatomic, copy) NSString * _Nullable iosSQL;
@property (nonatomic, copy) NSString * _Nullable isBlocker;
@property (nonatomic, copy) NSString * _Nullable isdeleted;
@property (nonatomic, copy) NSString * _Nullable isOfflinePossible;
@property (nonatomic, copy) NSString * _Nullable isServerValidationRequired;
@property (nonatomic, copy) NSString * _Nullable isVisibleHourSet;
@property (nonatomic, copy) NSString * _Nullable l_userCardId;
@property (nonatomic, copy) NSString * _Nullable lastVerifiedAtDateTime;
@property (nonatomic, copy) NSString * _Nullable minCardVersion;
@property (nonatomic, copy) NSString * _Nullable minimalVerificatonHours;
@property (nonatomic, copy) NSString * _Nullable navigateDismiss;
@property (nonatomic, copy) NSString * _Nullable nextAvailable;
@property (nonatomic, copy) NSString * _Nullable onCardTap;
@property (nonatomic, copy) NSString * _Nullable onClickAction1;
@property (nonatomic, copy) NSString * _Nullable onClickAction2;
@property (nonatomic, copy) NSString * _Nullable priority;
@property (nonatomic, copy) NSString * _Nullable repeatAfter;
@property (nonatomic, copy) NSString * _Nullable screenNumber;
@property (nonatomic, copy) NSString * _Nullable shareImageFlag;
@property (nonatomic, copy) NSString * _Nullable showCount;
@property (nonatomic, copy) NSString * _Nullable subPriority;
@property (nonatomic, copy) NSString * _Nullable subScreenNumber;
@property (nonatomic, copy) NSString * _Nullable thisCardLinkedTo;
@property (nonatomic, copy) NSString * _Nullable userCardId;
@property (nonatomic, copy) NSString * _Nullable validationBitValue;
@property (nonatomic, copy) NSString * _Nullable validationRequired;
@property (nonatomic, copy) NSString * _Nullable visibleHours;
@end


SWIFT_CLASS_NAMED("TargetCompleteData")
@interface TargetCompleteData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface TargetCompleteData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityId;
@property (nonatomic, copy) NSString * _Nullable amount;
@property (nonatomic, copy) NSString * _Nullable commentByMe;
@property (nonatomic, copy) NSString * _Nullable commentsCount;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable discription;
@property (nonatomic, copy) NSString * _Nullable displayText;
@property (nonatomic, copy) NSString * _Nullable feedId;
@property (nonatomic, copy) NSString * _Nullable habitId;
@property (nonatomic, copy) NSString * _Nullable habitName;
@property (nonatomic, copy) NSString * _Nullable heightAspectRatio;
@property (nonatomic, copy) NSString * _Nullable imageWidth;
@property (nonatomic, copy) NSString * _Nullable isdeleted;
@property (nonatomic, copy) NSString * _Nullable l_activityId;
@property (nonatomic, copy) NSString * _Nullable likeByMe;
@property (nonatomic, copy) NSString * _Nullable likesCount;
@property (nonatomic, copy) NSString * _Nullable localImage;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable privacyType;
@property (nonatomic, copy) NSString * _Nullable source;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable targetTotal;
@property (nonatomic, copy) NSString * _Nullable targetType;
@property (nonatomic, copy) NSString * _Nullable unit;
@property (nonatomic, copy) NSString * _Nullable urlImage;
@property (nonatomic, copy) NSString * _Nullable userId;
@end


SWIFT_CLASS("_TtC8GOQiiSDK13TrackerRouter")
@interface TrackerRouter : NSObject
+ (void)fetchUserInfo:(NSString * _Nonnull)methodEndpoint mobile:(NSString * _Nonnull)mobile and:(NSString * _Nonnull)encUserId completion:(void (^ _Nonnull)(NSDictionary * _Nullable, NSError * _Nullable))completion;
+ (void)sendTokenToServer:(NSString * _Nonnull)methodEndpoint withParam:(NSDictionary * _Nonnull)withParam completion:(void (^ _Nonnull)(NSDictionary * _Nullable, NSError * _Nullable))completion;
+ (void)postGlucoseData:(NSString * _Nonnull)methodEndpoint param:(NSString * _Nonnull)param completion:(void (^ _Nonnull)(NSDictionary * _Nullable, NSError * _Nullable))completion;
+ (void)unlinkGlucoMeter:(NSString * _Nonnull)apiNameStr glucoUUID:(NSString * _Nonnull)glucoUUID completion:(void (^ _Nonnull)(NSDictionary * _Nullable, NSError * _Nullable))completion;
+ (void)disconnect:(NSString * _Nonnull)methodEndpoint completion:(void (^ _Nonnull)(NSDictionary * _Nullable, NSError * _Nullable))completion;
+ (void)fetchAppList:(NSString * _Nonnull)keyword forFlow:(NSString * _Nonnull)flow forApplication:(NSString * _Nonnull)application completion:(void (^ _Nonnull)(NSDictionary * _Nullable, NSError * _Nullable))completion;
+ (void)getRequestWithoutSSL:(NSString * _Nonnull)methodEndpoint completion:(void (^ _Nonnull)(NSDictionary * _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end





SWIFT_CLASS("_TtC8GOQiiSDK24UploadFileS3BucketHelper")
@interface UploadFileS3BucketHelper : NSObject
- (void)sendRequest:(NSArray * _Nonnull)filePaths :(NSString * _Nonnull)fileQuantity :(NSString * _Nonnull)fileType :(NSString * _Nonnull)moduleType :(BOOL)isDelete completion:(void (^ _Nonnull)(CompletionResultType))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("UserHabitCheckinData")
@interface UserHabitCheckinData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface UserHabitCheckinData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable checkinId;
@property (nonatomic, copy) NSString * _Nullable cumulativecheckins;
@property (nonatomic, copy) NSString * _Nullable cumulativecheckinsForNotDone;
@property (nonatomic, copy) NSString * _Nullable current_streak;
@property (nonatomic, copy) NSString * _Nullable followed_days;
@property (nonatomic, copy) NSString * _Nullable habitId;
@property (nonatomic, copy) NSString * _Nullable longest_streak;
@property (nonatomic, copy) NSString * _Nullable month;
@property (nonatomic, copy) NSString * _Nullable reminderValue;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable total_days;
@property (nonatomic, copy) NSString * _Nullable year;
@end


SWIFT_CLASS_NAMED("UserHabitsData")
@interface UserHabitsData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface UserHabitsData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable category;
@property (nonatomic, copy) NSString * _Nullable current_streak;
@property (nonatomic, copy) NSString * _Nullable endDate;
@property (nonatomic, copy) NSString * _Nullable followed_days;
@property (nonatomic, copy) NSString * _Nullable followerCount;
@property (nonatomic, copy) NSString * _Nullable habitDescription;
@property (nonatomic, copy) NSString * _Nullable habitId;
@property (nonatomic, copy) NSString * _Nullable habitIdApi;
@property (nonatomic, copy) NSString * _Nullable habitLink;
@property (nonatomic, copy) NSString * _Nullable habitTitle;
@property (nonatomic, copy) NSString * _Nullable lastUpdatedTime;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable longest_streak;
@property (nonatomic, copy) NSString * _Nullable progressStatus;
@property (nonatomic) BOOL showDiscussionTab;
@property (nonatomic) BOOL showFollowersCard;
@property (nonatomic, copy) NSString * _Nullable sortId;
@property (nonatomic, copy) NSString * _Nullable startDate;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable total_days;
@end


SWIFT_CLASS_NAMED("UserTargetData")
@interface UserTargetData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface UserTargetData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable l_targetId;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable targetId;
@property (nonatomic, copy) NSString * _Nullable userCaloriesTarget;
@property (nonatomic, copy) NSString * _Nullable userId;
@property (nonatomic, copy) NSString * _Nullable userSkipTarget;
@property (nonatomic, copy) NSString * _Nullable userSleepTarget;
@property (nonatomic, copy) NSString * _Nullable userStepsTarget;
@property (nonatomic, copy) NSString * _Nullable userWaterTarget;
@property (nonatomic, copy) NSString * _Nullable userWeightTarget;
@end


SWIFT_CLASS_NAMED("WaterLogData")
@interface WaterLogData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface WaterLogData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityText;
@property (nonatomic, copy) NSString * _Nullable amount;
@property (nonatomic, copy) NSString * _Nullable comment;
@property (nonatomic, copy) NSString * _Nullable commentByMe;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic, copy) NSString * _Nullable heightAspectRatio;
@property (nonatomic, copy) NSString * _Nullable imageWidth;
@property (nonatomic, copy) NSString * _Nullable isdeleted;
@property (nonatomic, copy) NSString * _Nullable l_waterLogId;
@property (nonatomic, copy) NSString * _Nullable likeByMe;
@property (nonatomic, copy) NSString * _Nullable likes;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable privacyType;
@property (nonatomic, copy) NSString * _Nullable quantity;
@property (nonatomic, copy) NSString * _Nullable source;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable unit;
@property (nonatomic, copy) NSString * _Nullable userId;
@property (nonatomic, copy) NSString * _Nullable waterLogId;
@end


SWIFT_CLASS("_TtC8GOQiiSDK5WebVC")
@interface WebVC : UIViewController
@property (nonatomic, copy) NSString * _Nonnull urlToLoad;
- (void)viewDidLoad;
- (void)loadWebView;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class WKWebView;
@class WKWebViewConfiguration;
@class WKNavigationAction;
@class WKWindowFeatures;
@class WKNavigation;
@class UIImage;

@interface WebVC (SWIFT_EXTENSION(GOQiiSDK)) <WKNavigationDelegate, WKUIDelegate>
- (WKWebView * _Nullable)webView:(WKWebView * _Nonnull)webView createWebViewWithConfiguration:(WKWebViewConfiguration * _Nonnull)configuration forNavigationAction:(WKNavigationAction * _Nonnull)navigationAction windowFeatures:(WKWindowFeatures * _Nonnull)windowFeatures SWIFT_WARN_UNUSED_RESULT;
- (void)showActivityIndicatorWithShow:(BOOL)show;
- (void)webView:(WKWebView * _Nonnull)webView didFinishNavigation:(WKNavigation * _Null_unspecified)navigation;
- (void)webView:(WKWebView * _Nonnull)webView didStartProvisionalNavigation:(WKNavigation * _Null_unspecified)navigation;
- (void)webView:(WKWebView * _Nonnull)webView didFailNavigation:(WKNavigation * _Null_unspecified)navigation withError:(NSError * _Nonnull)error;
- (void)webView:(WKWebView * _Nonnull)webView decidePolicyForNavigationAction:(WKNavigationAction * _Nonnull)navigationAction decisionHandler:(void (^ _Nonnull)(WKNavigationActionPolicy))decisionHandler;
- (void)downloadCertificateWithBase64String:(NSString * _Nonnull)base64String;
- (void)image:(UIImage * _Nonnull)image didFinishSavingWithError:(NSError * _Nullable)error contextInfo:(void const * _Nonnull)contextInfo;
- (void)showAlertWithTitle:(NSString * _Nonnull)title message:(NSString * _Nonnull)message;
@end


SWIFT_CLASS_NAMED("WeightLogData")
@interface WeightLogData : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@interface WeightLogData (SWIFT_EXTENSION(GOQiiSDK))
@property (nonatomic, copy) NSString * _Nullable activityText;
@property (nonatomic, copy) NSString * _Nullable bmi;
@property (nonatomic, copy) NSString * _Nullable bmr;
@property (nonatomic, copy) NSString * _Nullable bodyFat;
@property (nonatomic, copy) NSString * _Nullable bone;
@property (nonatomic, copy) NSString * _Nullable boneMuscle;
@property (nonatomic, copy) NSString * _Nullable change;
@property (nonatomic, copy) NSString * _Nullable comment;
@property (nonatomic) BOOL commentByMe;
@property (nonatomic, copy) NSString * _Nullable createdTime;
@property (nonatomic) BOOL gain;
@property (nonatomic, copy) NSString * _Nullable hip;
@property (nonatomic) BOOL is_deleted;
@property (nonatomic, copy) NSString * _Nullable l_weightLogId;
@property (nonatomic, copy) NSString * _Nullable likeByMe;
@property (nonatomic, copy) NSString * _Nullable likes;
@property (nonatomic, copy) NSString * _Nullable logDate;
@property (nonatomic, copy) NSString * _Nullable moisture;
@property (nonatomic, copy) NSString * _Nullable muscle;
@property (nonatomic, copy) NSString * _Nullable privacyType;
@property (nonatomic, copy) NSString * _Nullable protein;
@property (nonatomic, copy) NSString * _Nullable resistance;
@property (nonatomic, copy) NSString * _Nullable scaleData;
@property (nonatomic, copy) NSString * _Nullable skeletalMuscle;
@property (nonatomic, copy) NSString * _Nullable source;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable targetWeight;
@property (nonatomic, copy) NSString * _Nullable userId;
@property (nonatomic, copy) NSString * _Nullable visceralFat;
@property (nonatomic, copy) NSString * _Nullable waist;
@property (nonatomic, copy) NSString * _Nullable waistHipUnit;
@property (nonatomic, copy) NSString * _Nullable weight;
@property (nonatomic, copy) NSString * _Nullable weightLogId;
@property (nonatomic, copy) NSString * _Nullable weightUnit;
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
